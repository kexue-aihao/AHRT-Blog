<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.ComponentStudio.ComponentPlatformInterface</name>
    </assembly>
    <members>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ConfirmOverwriteResult">
            <summary>
            An enumeration used to indicate whether to overwrite an existing override value when using 
            <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.IXmlSerializable.MergeXml(System.String,System.Boolean)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.ConfirmOverwriteResult.Cancel">
            <summary>
            Cancel action, stop where you are. 
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.ConfirmOverwriteResult.Yes">
            <summary>
            Overwrite this setting override. 
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.ConfirmOverwriteResult.YesToAll">
            <summary>
            Overwrite this setting override and all the ones after it.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.ConfirmOverwriteResult.No">
            <summary>
            Don't overwrite this setting override. 
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SensitiveDataOption">
            <summary>
            specifies operation sensitive data such as password
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.SensitiveDataOption.PassThrough">
            <summary>
            Do not perform any operation on sensitive data
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.SensitiveDataOption.HideSensitiveData">
            <summary>
            hide sensitive data
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.SensitiveDataOption.DoNotHideSensitiveData">
            <summary>
            Do not hide sensitive data
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.MergeXmlEventArgs">
            <summary>
            The argument for merge Xml confirmation
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MergeXmlEventArgs.NewValue">
            <summary>
            The new value to overwrite for the setting
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MergeXmlEventArgs.NewAction">
            <summary>
            The new action to overwrite for the setting
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MergeXmlEventArgs.NewDynamicKeyValue">
            <summary>
            The new value to overwrite for the setting
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MergeXmlEventArgs.ConfirmationResult">
            <summary>
            The result of confirmation
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile">
            <summary>
            Contains information that describes a Windows unattended setup answer file, typically known as "Unattend.xml."
            </summary>
        </member>
        <member name="E:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.CreateConfigurationSetProgressChanged">
            <summary>
            Reports the status of configuration set creation.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage)">
            <summary>
            Create an instance of AnswerFile
            </summary>
            <param name="image">
            The offline image that the answer file is created against.
            </param>
            <exception cref="T:System.ArgumentNullException">Thrown if <c>image</c> is <c>null</c>.</exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.ValidateXml(System.Xml.XmlReader,System.Object)">
            <summary>
            Additional validation function to call while we are reading the answer file.
            The schema doesn't have information about wcm:action.
            </summary>
            <param name="xmlReader">the xml reader</param>
            <param name="validateRecord">the record object for validation</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.#ctor(System.String)">
            <summary>
            Open an answer file.
            </summary>
            <param name="path">Path to the answer file.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <c>path</c> is <c>null</c> or empty.</exception>
            <exception cref="T:System.Xml.XmlException">Thrown if answer file format error.</exception>
            <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Thrown if answer file schema validation failed.</exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.#ctor(System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo)">
            <summary>
            Open an answer file using the specified image.
            </summary>
            <param name="path">Path to the answer file.</param>
            <param name="imageInfo">An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo"/> that represents the offline image that the answer file will be associated with.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <c>path</c> is <c>null</c> or empty.</exception>
            <exception cref="T:System.Xml.XmlException">Thrown if answer file format error.</exception>
            <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Thrown if answer file schema validation failed.</exception>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.SourceIsReadOnly">
            <summary>
            Checks if the answer file is read-only.
            </summary>
            <value>
            <c>true</c> if the answer file is read-only; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.LoadResult">
            <summary>
            Retrieves the validation result for the recently opened answer file. 
            </summary>
            <value>
            The validation result for the recently opened answer file. 
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.Load">
            <summary>
            Load or reload an answer file that already exists on disk.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the answer file has not been saved on disk, or 
            the <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.Path"/> property has not been set.</exception>
            <exception cref="T:System.Xml.XmlException">Thrown if answer file format error.</exception>
            <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Thrown if answer file schema validation failed.</exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.PurgeSettingOverride(Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingOverrideContainer,System.Object)">
            <summary>
            Purge the setting override container, remove it if it doesn't has override in it
            </summary>
            <param name="overrideContainer">the object to process</param>
            <param name="parameter">additional parameter, not used in this function</param>
            <returns>
            true: if need to process the parent
            false: if no need to process the parent
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.Purge">
            <summary>
            Removes all setting overrides in answer file that don't have an override value.
            </summary>
            <remarks>
            A setting override is considered to have an override in the following cases:
            <list type="bullet">
            <item><description>If it has a value.</description></item>
            <item><description>If it has an action and a dynamic key is specified.</description></item>
            <item><description>If it has at least one descendent that has an override value.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.Save">
            <summary>
            Saves change made to answer file
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.Save(Microsoft.ComponentStudio.ComponentPlatformInterface.SensitiveDataOption)">
            <summary>
            Saves change made to answer file with options to hide sensitive data.
            </summary>
            <param name="sensitiveDataOption">Specifies whether to hide sensitive data in the answer file.</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.SaveAs(System.String)">
            <summary>
            Saves the answer file with a specified file name.
            </summary>
            <param name="path">The path of the specified file.</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.SaveAs(System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.SensitiveDataOption)">
            <summary>
            Saves the answer file with a specified file name with options to hide sensitive data.
            </summary>
            <param name="path">The path of the specified file.</param>
            <param name="sensitiveDataOption">Specifies whether to hide sensitive data in the answer file.</param>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.Path">
            <summary>
            Retrieves the path from which the answer file is loaded.
            </summary>
            <value>
            The path from which the answer file is loaded.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.ApplicationTitle">
            <summary>
            Retrieves the name of the answer file.
            </summary>
            <value>
            The name of the answer file.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.Dirty">
            <summary>
            Retrieves or sets the state of the answer file.
            </summary>
            <value>
            <c>true</c> if the file has changed since last save; <c>false</c> otherwise.
            </value>
            <remarks>
            Each save or reload operation resets this property.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.DocumentState">
            <summary>
            Retrieves the document state of the answer file, and checks whether the file is loaded.
            </summary>
            <value>
            The document state of the answer file.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.OfflineImage">
            <summary>
            Retrieves or sets the offline image this answer file is created against.
            </summary>
            <value>
            The offline image this answer file is created against.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.ComponentSettings">
            <summary>
            Get the collection of all components with override-able settings in the answer file. 
            </summary>
            <value>The collection representing all components with override-able settings in the answer file. </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.SettingOverrides">
            <summary>
            Retrieves the setting overrides collection of the answer file.
            </summary>
            <value>
            The setting overrides collection of the answer file.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.PackageActions">
            <summary>
            Retrieves the collection of all package actions in the answer file. 
            The collection can be searched using the package identity. 
            </summary>
            <value>
            The collection of all package actions in the answer file.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.CreateConfigurationSet(System.String,System.String)">
            <summary>
            Creates a configuration set and copies it to a target folder.
            </summary>
            <param name="targetFolder">
            The target folder.
            </param>
            <param name="sourceOemFolder">
            The folder whose contents will be copied to a $OEM$ folder in the configuration set. Can be null or empty string.
            </param>
            <exception cref="T:System.Security.SecurityException">Thrown if any files referenced in the $OEM$ source folder are inaccessible during publish.</exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.CreateConfigurationSet(System.String,System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.SensitiveDataOption)">
            <summary>
            Publish answer file to a configuration set.
            </summary>
            <param name="targetFolder">
            Root directory of the configuration set.
            </param>
            <param name="sourceOemFolder">
            Name of the folder whose contents will be copied to a $OEM$ folder in the configuration set. Can be null or empty string.
            </param>
            <param name="sensitiveDataOption">specifies whether to hide sensitive data in the answer file</param>
            <exception cref="T:System.Security.SecurityException">Thrown if any files referenced in the $OEM$ source folder are inaccessible during publish.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the answer file is already inside a configuration set (cannot re-publish).</exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.IsConfigurationSet">
            <summary>
            Determines if the answer file is from a configuration set (published).
            </summary>
            <returns>
            <c>true</c> if the answer file is published; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.Validate">
            <summary>
            Performs validation on the current answer file.
            </summary>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult"/> indicating pass or failure.</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.FindComponentIdentity(System.String)">
            <summary>
            Try to find identity in answer file for the specified name
            </summary>
            <param name="name">the name of the component to search</param>
            <returns>the identity in answer file or null if not found</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.GetDriverPaths(Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)">
            <summary>
            Retrieves the driver path collection for a specific configuration pass.
            </summary>
            <param name="configurationPass">The configuration pass.</param>
            <returns>
            The driver path collection for a specific configuration pass.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.GetRunOnceCommands(Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)">
            <summary>
            Retrieves a RunOnceCommand collection for a specific configuration pass.
            </summary>
            <param name="configurationPass">The configuration pass.</param>
            <returns>
            The RunOnceCommand collection for a specific configuration pass.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.SavePublishAs(System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.SensitiveDataOption)">
            <summary>
            Save the answer file into the publish file
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.FirePublishStatusEvent(System.String,System.String)">
            <summary>
            Fires the CreateConfigurationSetProgressChanged event. If user cancels the action, method returns false.
            </summary>
            <param name="message"></param>
            <param name="publishPath"></param>
            <returns></returns>
        </member>
        <member name="E:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.ConfirmOverwriteXml">
            <summary>
            Occurs when copying setting overrides from one installation pass to another installation pass.
            </summary>
            <remarks>
            <para>
            This event is raised when a setting override is copied from one installation pass to another
            (via <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.GetXml"/> and <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.MergeXml(System.String,System.Boolean)"/>, for example).
            If the same override already exists in the target installation pass, this event will notify the caller.
            The caller can then decide whether to overwrite the exiting override in the target installation pass.
            </para>
            <para>
            If the event is not handled, the default behavior is to overwrite all existing setting override in target installation pass.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.MergeComponentSettingXml(System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass,System.Boolean)">
            <summary>
            Merge all setting overrides in an instance of <see>Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting</see>
            into the another configuration pass in this AnswerFile instance.
            </summary>
            <param name="xmlString">The xml string that represents all setting overrides in an instance of <see>Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting</see>.</param>
            <param name="configurationPass">The configuration pass that the setting overrides will be merged into.</param>
            <param name="failOnError">If this value is <c>true</c>, an <see cref="T:System.ArgumentException"/> will be thrown if an override in the xml string cannot be added.</param>
            <exception cref="T:System.ArgumentException">thrown if <paramref name="xmlString"/> is not a valid xml string that describes setting overrides, 
            or the setting override cannot be merged and <paramref name="failOnError"/> is <c>true</c>.</exception>
            <remarks>
            <para>
            The xml string can be obtained by calling <see>Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.GetXml()</see>.
            </para>
            <para>
            During the merge operation, if a duplicate setting already exists in the target configuration pass, the <see>Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.ConfirmOverwriteXml</see> event will be raised.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.ObfuscateChildSettingOverrides(Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride,System.Boolean)">
            <summary>
            obfuscate child override except the IsInPlainText flag, set the value of the flag to "true"
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.Obfuscate(Microsoft.ComponentStudio.ComponentPlatformInterface.SensitiveDataOption)">
            <summary>
            obfuscate password in the answer file
            Since each setting have two values, one in AnswerFileSettingOverride.m_value, the other
            in m_settingoverriddenode.Value (the Xml node value), we can obfuscate the Xml node value
            without changing the "display value" of the override
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.m_serializeRoot">
            <summary>
            Get the Node of the root unattend element.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.ValidateSettingOverrideParam">
            <summary>
            object parameter passed to ValidateSettingOverride()
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.ValidateSettingOverride(Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingOverrideContainer,System.Object)">
            <summary>
            Runs validation on a single SettingOverride.
            </summary>
            <param name="settingOverride">The setting override to validate.</param>
            <param name="param">An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.ValidateSettingOverrideParam"/>.</param>
            <returns>true to continue validate child settings, </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.ValidatePackageAction(Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction,Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult)">
            <summary>
            Runs validation on a single PackageAction.
            </summary>
            <param name="pa"></param>
            <param name="result"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.ValidatePackageHierarchy(Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction,Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileWindowsFeatureSelection,Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult)">
            <summary>
            Walks the dependency hierarchy for the specified AnswerFileWindowsFeatureSelection to see if any path to the
            parent is enabled. If any path is enabled, there is no warning generated. If no path is enabled, warnings are
            generated for every path.
            </summary>
            <param name="pa"></param>
            <param name="feature"></param>
            <param name="result"></param>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.DefaultPublishFileName">
            <summary>
            Retrieves the answer file name in a configuration set.
            </summary>
            <value>
            The answer file name to be used in a configuration set.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.DefaultPublishFolderName">
            <summary>
            Retrieves the default folder name that will be used to store the configuration set.
            </summary>
            <value>
            The default folder name of configuration set.
            </value>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.AnswerFilePublisher">
            <summary>
            Publishes an answer file to a specified target location.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.AnswerFilePublisher.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile,System.String,System.String)">
            <summary>
            Construct an AnswerFilePublisher.
            </summary>
            <param name="answerFile">The answer file to be published.</param>
            <param name="targetFolder">Target folder location to publish the answer file.</param>
            <param name="sourceOemFolder">Source folder to copy into configuration set and rename to $OEM$.</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.AnswerFilePublisher.Publish(Microsoft.ComponentStudio.ComponentPlatformInterface.SensitiveDataOption)">
            <summary>
            Publishes the enclosed answer file.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.AnswerFilePublisher.CheckFileAccessAndCopy(System.Collections.Generic.List{Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileError},Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult@)">
            <summary>
            Runs through all answer files and insures they exist and that we have access to them.
            If any files fail, it creates a list of failed files and sends them back to caller
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.AnswerFilePublisher.SavePublishedAnswerFile(Microsoft.ComponentStudio.ComponentPlatformInterface.SensitiveDataOption)">
            <summary>
            Save the answer file to the publish location.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.AnswerFilePublisher.ProcessSourcePaths(Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction,System.Collections.Generic.List{Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileError})">
            <summary>
            Build the list of paths found in all SourcePath instances.
            </summary>
            <param name="pa"></param>
            <param name="fileErrors"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.AnswerFilePublisher.ProcessSettingOverrides(System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride},System.Collections.Generic.List{Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileError},Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult)">
            <summary>
            Recurse down the SettingOverride tree and find all the Path types and store the
            SettingOverride instances for use later.
            </summary>
            <param name="settingOverrides"></param>
            <param name="fileErrors"></param>
            <param name="vr"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.AnswerFilePublisher.ProcessPath(Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride,System.Collections.Generic.List{Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileError})">
            <summary>
            Determine publish path for the specified pathNode and copy files to it.
            </summary>
            <param name="pathNode"></param>
            <param name="fileErrors"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.AnswerFilePublisher.FileErrorsContainsFile(System.Collections.Generic.List{Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileError},System.String)">
            <summary>
            Returns true if the specified filename is in the list of errors. In general, the list of errors
            should be small so the sequential search should not cause a perf problem.
            </summary>
            <param name="fileErrors"></param>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.AnswerFilePublisher.CheckAccessForPath(Microsoft.ComponentStudio.ComponentPlatformInterface.PathLocation,System.Collections.Generic.List{Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileError},System.Object)">
            <summary>
            Checks for read access on the specified file or path name. If access is denied, the file and the error
            are recorded in the FileErrors instance provided.
            </summary>
            <param name="pathLoc"></param>
            <param name="fileErrors"></param>
            <param name="subject"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.AnswerFilePublisher.CheckAccessForFile(System.String,System.Collections.Generic.List{Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileError},System.Object)">
            <summary>
            Checks for read access on the specified file using CAS. If access is denied, the file and the error
            are recorded in the FileErrors instance provided.
            </summary>
            <param name="filename"></param>
            <param name="fileErrors"></param>
            <param name="subject"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.AnswerFilePublisher.CopyPath(Microsoft.ComponentStudio.ComponentPlatformInterface.PathLocation,System.Collections.Generic.List{Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileError},System.Object)">
            <summary>
            Copies files from the PathLocation's ActualLocation to the PathLocation's PublishLocation.
            </summary>
            <param name="pathLoc"></param>
            <param name="fileErrors"></param>
            <param name="subject"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.AnswerFilePublisher.CalcTargetFileName(Microsoft.ComponentStudio.ComponentPlatformInterface.PathLocation,System.String)">
            <summary>
            Calculates the final target file name for the specified source file.
            </summary>
            <param name="pathLoc"></param>
            <param name="actualFile"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.AnswerFilePublisher.TransformPath(System.String)">
            <summary>
            Converts the actual path to a relative path for publishing. If path root is a drive
            letter, it gets stripped. If path root is a server/share name, an alias is created
            for that server/share. If the same server/share occurs again, the alias is re-used.
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.AnswerFilePublisher.GetAlias(System.String,System.String)">
            <summary>
            Converts the servername/sharename into an alias. If this servername/sharename have already
            been converted, the previous alias name is returned.
            </summary>
            <param name="serverName"></param>
            <param name="shareName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.AnswerFilePublisher.GetDirectoryName(System.String)">
            <summary>
            Because GetDirectoryName in .NET does not properly handle long path names, need to create
            a local version that does. fullFilePath is not assumed to exist so can't check attributes, therefore
            it is assumed that fullFilePath points to a file. If path is the folder you want to create, do not
            call this.
            </summary>
            <param name="fullFilePath"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.AnswerFilePublisher.SetUseConfigSetOverride">
            <summary>
            Sets the UseConfigurationSet flag in the published unattend.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting">
            <summary>
            Represents a component with setting overrides in an answer file, in a particular configuration pass context. 
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.AddScalarSettings(System.ComponentModel.PropertyDescriptorCollection)">
            <summary>
            Provide ability for AnswerFileComponentSetting to add its override
            </summary>
            <param name="propertyCollection"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.Remove">
            <summary>
            Removes this object from answer file.
            </summary>
            <remarks>
            When this method is called, all descendent setting overrides will be removed from answer file.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.AppliedConfigurationPass">
            <summary>
            Retrieves the configuration pass that all descendent setting overrides are applied to.
            </summary>
            <value>
            The configuration pass that all descendent setting overrides in this instance are applied to.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.ChildSettingOverrides">
            <summary>
            Retrieves all the top-level setting overrides of the component in the applied configuration pass.
            </summary>
            <value>
            All the top-level setting overrides of the component in the applied configuration pass.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.SettingOverrides">
            <summary>
            Retrieves all descendent setting overrides.
            </summary>
            <value>
            A collection that represents all descendent setting overrides of this instance.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.Enabled">
            <summary>
            Indicates whether the component has been installed
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.ChangeImage(Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage)">
            <summary>
            Use the specified image for this package action
            </summary>
            <param name="image">the image to use</param>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.ParentAnswerFile">
            <summary>
            Retrieves the answer file object to which the current object belongs.
            </summary>
            <value>
            The answer file object to which the current component setting belongs.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.GetXml">
            <summary>
            Retrieves the XML string representation of all descendent setting overrides.
            </summary>
            <returns>
            The XML string that contains all setting overrides for the applied configuration pass.
            </returns>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.MergeXml(System.String,System.Boolean)"/>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.GetXml"/>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.MergeXml(System.String,System.Boolean)"/>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.MergeXml(System.String,System.Boolean)">
            <summary>
            Merges setting overrides from another instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting"/>
            into the current instance.
            </summary>
            <param name="xmlString">The XML string that represents setting overrides in another instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting"/>.</param>
            <param name="failOnError">If this value is <c>true</c>, the method will throw exception if an override in the XML string cannot be added to the current instance.</param>
            <remarks> 
            The <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.GetXml"/> and 
            <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.MergeXml(System.String,System.Boolean)"/> 
            provides a way to "copy" setting overrides from one instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting"/> to another. 
            The method will enumerate all setting overrides in the XML string and merges it to the current object as described below:
            
            <list type="bullet">
            <item><description>If the setting override in <paramref name="xmlString"/> is a descendent of the current object, the 
            descendent will be overridden by the values defined in the XML string.</description></item>
            <item><description>If the setting override in <paramref name="xmlString"/> is not a descendent of the current object,  
            a descendent will be created using the value defined in the XML string.</description></item>
            </list>
            </remarks>
            <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.GetXml"/>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.GetXml"/>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.MergeXml(System.String,System.Boolean)"/>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.SettingOverrideSyncRoot">
            <summary>
            Returns the object that can be used to synchronize access to setting overrides in
            multi-thread context.
            </summary>
            <value>
            An object that can be used to synchronize access to setting overrides in multi-thread context.
            </value>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSettingCollection">
            <summary>
            Represents the collection of all components with setting overrides inside an answer file.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSettingCollection.Create(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity,Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions)">
            <summary>
            Creates or retrieves an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting"/> 
            for a component and prepares the component for adding setting overrides to the specified configuration pass.
            </summary>
            <param name="identity">The identity of the component.</param>
            <param name="configurationPass">The configuration pass that new setting overrides of this component will be created within.</param>
            <param name="createOption">The enumeration element  that determines whether to return the existing entity. or throw an exception when an entity already exists.</param>
            <returns> An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting"/>.</returns>
            <remarks>
            If the specified component has not been created in the specified configuration pass, a new instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting"/>
            will be created. Otherwise, if the value of <paramref name="createOption"/> is <see cref="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions.ReturnExisting"/>
            then this method will return the existing instance. If the value of <paramref name="createOption"/> is 
            <see cref="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions.FailIfExists"/> then
            // an <see cref="T:System.InvalidOperationException"/> will be thrown.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="identity"/> is <c>null</c>.</exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if there is already the specified component is found in the specified configuration pass, 
            and the value of <paramref name="createOption"/> is <see cref="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions.FailIfExists"/>.</exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSettingCollection.FindAll(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity)">
            <summary>
            Retrieves setting information of the specified component in all configuration passes.
            </summary>
            <param name="identity">The identity of the component.</param>
            <returns>
            A collection that is indexed by <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass"/>
            that contains setting information of the specified component in all configuration passes.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSettingCollection.FindAll(Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)">
            <summary>
            Retrieves all setting information within a configuration pass.
            </summary>
            <param name="configurationPass">The configuration pass to be searched.</param>
            <returns>
            A collection that is indexed by <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity"/>
            that contains all setting information within the specified configuration pass.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSettingCollection.FindAny(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity,Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)">
            <summary>
            Retrieves the setting information that matches an identity and a configuration pass.
            </summary>
            <param name="id">The identity of the component.</param>
            <param name="configurationPass">The configuration pass to be searched.</param>
            <returns>A single instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting"/>
            that describes the setting information.</returns>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSettingCollection.Count">
            <summary>
            Retrieves the number of items in the answer file component settings collection.
            </summary>
            <value>
            The number of items in the answer file component settings collection.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSettingCollection.FindAll(System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)">
            <summary>
            Gets a collection of AnswerFileComponentSetting objects that exist in the answer file.
            </summary>
            <param name="componentName"></param>
            <param name="configurationPass"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSettingCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator over the collection. 
            </returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileErrorReason">
            <summary>
            Indicates the reason for a file error during answer file publishing.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileError">
            <summary>
            Contains information on a single file in the answer file that failed to publish.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileError.FileName">
            <summary>
            Filename of the file that failed to publish.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileError.Reason">
            <summary>
            Reason why this file failed to publish.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileError.Subject">
            <summary>
            Gets the AnswerFile object that was the source of the error.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateConfigurationSetProgressChangedEventArgs">
            <summary>
            Specified the event arguments used in the <see cref="E:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.CreateConfigurationSetProgressChanged"/> event.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateConfigurationSetProgressChangedEventArgs.Message">
            <summary>
            Retrieves the message that describes the current progress.
            </summary>
            <value>
            The message that describes the current progress.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateConfigurationSetProgressChangedEventArgs.PublishedPath">
            <summary>
            Retrieves the path of the answer file being copied to the target location.
            </summary>
            <value>
            The path of the answer file being copied to the target location.
            </value>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PathLocation">
            <summary>
            Each SourcePath/SettingOverride is associated with a PathLocation instance. This is used
            to track the original path and the publish path for each object.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.PathLocation.ActualLocation">
            <summary>
            Gets the original file or folder location.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.PathLocation.SetPublishRelativePath(System.String)">
            <summary>
            Sets the published path relative to %configsetroot%.
            </summary>
            <param name="path"></param>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.PathLocation.PublishAbsolutePath">
            <summary>
            Gets the path to which the file or folder is copied to in the configuration set.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.PathLocation.ConfigSetRootPath">
            <summary>
            Gets path with %configsetroot% prefixed. This is the value written into the published answer file.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingDefinition.IsScalarType">
            <summary>
            Whether this setting is a scalar type
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingDefinition.IsListType">
            <summary>
            Whether this setting is a list type
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingDefinition.IsArrayType">
            <summary>
            Whether this setting is an array of base type
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingDefinition.TypeName">
            <summary>
            The name of the type
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingDefinition.DataType">
            <summary>
            Gets the .NET type of this SettingDefinition
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingDefinition.DefaultValue">
            <summary>
            The default value of this setting, null if it is not a scalar type
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingDefinition.IsDefaultValueDefined">
            <summary>
            Whether the default value of this setting is defined or not
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingDefinition.CanBeNull">
            <summary>
            Whether the value of this setting can be nil. false if it is not a scalar type
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingDefinition.IsDeprecated(System.String@)">
            <summary>
            Whether the setting is deprecated
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingDefinition.KeyType">
            <summary>
            Data type of the key for an List
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingDefinition.KeyName">
            <summary>
            Name of the key for an List
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingDefinition.IsKeyDefined">
            <summary>
            Whether key is defined for an List, false if setting is not a list
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingDefinition.MaxLength">
            <summary>
            The maximum length of the setting, 0 if no restriction
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingDefinition.EnumerationValue">
            <summary>
            The allowed values of the enumeration, null if not a enumeration
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingDefinition.RangeMinValue">
            <summary>
            The minimum value (inclusive) of the setting, null if no restriction
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingDefinition.RangeMaxValue">
            <summary>
            The maximum value (inclusive) of the setting, null if no restriction
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingDefinition.RegularExpression">
            <summary>
            Gets the regular expression that can be used to validate the string value
            null if no restriction
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.IAnswerFileSettingOverrideCreator">
            <summary>
            Interface for objects in the answer file that can create child overrides.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.IXmlSerializable">
            <summary>
            Interface for objects that can serialize to and from XML.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.IXmlSerializable.GetXml">
            <summary>
            Gets an XML string representation of this node and all its child nodes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.IXmlSerializable.MergeXml(System.String,System.Boolean)">
            <summary>
            Merges the XML string representation of setting overrides into this node's children.
            </summary>
            <param name="xmlString">The XML string that will be merged.</param>
            <param name="failOnError">Throws <see cref="T:System.ArgumentException"/> if errors occur.</param>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.IAnswerFileSettingOverrideContainer">
            <summary>
            Defines the interface to navigate the setting override hierarchy of a certain component
            and configuration pass in an answer file.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.IAnswerFileSettingOverrideContainer.SettingOverrides">
            <summary>
            Retrieves all descendent setting overrides.
            </summary>
            <value>
            A collection of all descendent setting overrides.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.IAnswerFileSettingOverrideContainer.AppliedConfigurationPass">
            <summary>
            Retrieves the configuration pass that all child setting overrides are applied to.
            </summary>
            <value>
            The configuration pass that all child setting overrides are applied to.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.IAnswerFileSettingOverrideContainer.SettingOverrideSyncRoot">
            <summary>
            Returns the object that can be used to synchronize access to setting overrides in
            multi-thread context.
            </summary>
            <value>
            An object that can be used to synchronize access to setting overrides in multi-thread context.
            </value>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride">
            <summary>
            Describes an setting override in an answer file.
            </summary>
            <remarks>
            To create an instance of this class, you can call <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverrideCollection.Create(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity,System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions)"/>
            from <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.SettingOverrides"/>. 
            A setting override entry will be automatically added to the answer file once it's saved.
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting,System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)">
            <summary>
            Don't call directly. Please use AnswerFileSettingOverride.Factory to create an instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride,System.String)">
            <summary>
            Don't call directly. Please use AnswerFileSettingOverride.Factory to create an instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting,Microsoft.ComponentStudio.ComponentPlatformInterface.Node,Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass,System.Boolean)">
            <summary>
            Don't call directly. Please use AnswerFileSettingOverride.Factory to create an instance of this class.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride,Microsoft.ComponentStudio.ComponentPlatformInterface.Node,System.Boolean)">
            <summary>
            Don't call directly. Please use AnswerFileSettingOverride.Factory to create an instance of this class.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.Parent">
            <summary>
            Retrieves the parent of the override.
            </summary>
            <value>
            The parent of the override or <c>null</c> for top level <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride"/>.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.SettingOverrides">
            <summary>
            Retrieves all descendent setting overrides.
            </summary>
            <value>
            A collection that represents all descendent setting overrides of this instance.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.ChildSettingOverrides">
            <summary>
            Retrieves the collection of the child overrides.
            </summary>
            <value>
            The collection of the child overrides.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.AppliedConfigurationPass">
            <summary>
            Retrieves the configuration pass the override will be applied to.
            </summary>
            <value>
            The configuration pass the override will be applied to.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.Value">
            <summary>
            Retrieves and sets the override value of a setting. 
            </summary>
            <value>
            The override value of a setting.
            </value>
            <remarks>
            <para>
            Use this property to set the override value of a simple type setting. For a setting of complex type,
            you must navigate to the instances of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride"/>
            that represent each leaf of the complex type, and set the override value on the leaf instance. 
            </para>
            <para>
            If the type of the setting is array of strings(the <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.IsArrayType"/>
            property returns <c>true</c> and <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.DataType"/> is
            <c>typeof(String)</c> for the corresponding <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.Definition"/>
            object), then you should not use this property to set the override. Instead you should use 
            <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.StringArrayValue"/>.
            </para>
            <para>
            A <c>null</c> value is allowed if the <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.CanBeNull"/>
            property of the corresponding <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.Definition"/>
            object is <c>true</c>. In this case an empty string will be written to the answer file for this setting, and the <c>xsi:nil</c> attribute
            will be set to <c>true</c>. To completely remove
            the override from answer file, call <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.Remove"/>.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the value is set to <c>null</c>, and 
            the <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.CanBeNull"/>
            property of the corresponding <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.Definition"/>
            object is <c>false</c>.
            </exception>
            <exception cref="T:System.InvalidOperationException">Thrown if one of the following is true:
            <list type="bullet">
            <item><description>The setting is a complex type.</description></item>
            <item><description>The parent of the setting is a list type, and the setting is a key of the list, and the value is <c>null</c> 
            (the key of a list type cannot be <c>null</c>).</description></item>
            <item><description>The parent of the setting is a list type, and the setting is a key of the list, and a key of the same
            value already exists (a list type cannot have duplicate keys).</description></item>
            <item><description>The value is invalid.</description></item>
            </list>
            </exception>
            <exception cref="T:System.NotSupportedException">Thrown if the setting is an array of strings. In this case you should use 
            <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.StringArrayValue"/> instead.
            </exception>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.RawValue">
            <summary>
            Get the raw value of the SettingOverride
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.StringArrayValue">
            <summary>
            Retrieves and sets the override value of a setting if the setting type is array of strings. 
            </summary>
            <value>
            List of string values of a setting whose type is array of strings.
            </value>
            <remarks>
            See <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.Value"/>
            for explanation of string array settings.
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.CreateSettingOverride(Microsoft.ComponentStudio.ComponentPlatformInterface.SettingPath,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions)">
            <summary>
            Create or return an existing setting override specified by path.
            Internally, it will create all the parent override if necessary.
            </summary>
            <param name="path">path to the setting.</param>
            <param name="createOption">Whether return existing one or throw exception when an entity already exists.</param>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride"/></returns>
            <exception cref="T:System.NotSupportedException">Thrown if the instance is read-only.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if <c>name</c> is <c>null</c> or empty.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <c>name</c> does not specify a valid setting.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the override cannot be created (for example, maximum occurrences has been reached). </exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.ChangeValue(System.String)">
            <summary>
            Change value inside the object and XML
            </summary>
            <param name="value">the value to set</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.ValueChanged">
            <summary>
            Set already escaped value inside the object and XML
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.Remove">
            <summary>
            Removes the setting override from answer file.
            </summary>
            <remarks>
            The object should not be used after this method is called.
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.GetXml">
            <summary>
            Retrieves the XML string representation of the setting override.
            </summary>
            <returns>The XML string of the setting override.</returns>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.MergeXml(System.String,System.Boolean)"/>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSetting.GetXml"/>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.MergeXml(System.String,System.Boolean)"/>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.MergeXml(System.String,System.Boolean)">
            <summary>
            Merges setting overrides from another instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride"/>
            into the current instance.
            </summary>
            <param name="xmlString">The XML string that represents setting overrides in another instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride"/>.</param>
            <param name="failOnError">If this value is <c>true</c>, the method will throw exception if an override in the XML string cannot be added to the current instance.</param>
            <remarks> 
            The <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.GetXml"/> and 
            <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.MergeXml(System.String,System.Boolean)"/> 
            provides a way to "copy" setting overrides from one instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride"/> to another. 
            The method will enumerate all setting overrides in the XML string and merges it to the current object as described below:
            
            <list type="bullet">
            <item><description>If the setting override in <paramref name="xmlString"/> is a descendent of the current object, the 
            descendent will be overridden by the values defined in the XML string.</description></item>
            <item><description>If the setting override in <paramref name="xmlString"/> is not a descendent of the current object,  
            a descendent will be created using the value defined in the XML string.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.ChangeImage(Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingOverrideContainer,System.Object)">
            <summary>
            Change the setting override to use definition from the specified image
            </summary>
            <param name="overrideContainer">the container to process</param>
            <param name="image">the image to use</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.SettingOverrideNode">
            <summary>
            Gets the setting override XML node
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.GenerateUniqueDynamicKey(System.Object)">
            <summary>
            Create a unique dynamic key for list setting
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.SettingOverrideSyncRoot">
            <summary>
            Returns the object that can be used to synchronize access to setting overrides in
            multi-thread context
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride.Dirty">
            <summary>
            Indicates whether the setting override has been modified after it is initialized
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileWindowsFeatureSelection">
            <summary>
            Represents a Windows feature selection in a <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction"/>
            </summary>
            <remarks>
            <para>
            Use AnswerFileWindowsFeatureSelection to change the installation state of a Windows feature with in a package.
            The package can be inside an offline Windows Image or can be a package you get from the Windows Update web site.
            </para>
            <para>
            All Windows features are defined in a single package - the Windows Foundation Package.
            </para>
            <para>
            To enable/disable a certain Windows feature, first create an instance of
            <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction"/>
            that configures the Windows Foundation Package, then enable/disable individual
            Windows feature in its <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.WindowsFeatureSelections"/>
            property.
            </para>
            <para>
            The Windows features that come with offline Windows image are most likely contained in a single package called 
            Windows Foundation Package. The identity of the Windows Foundation Package can be retrieved using 
            <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage.WindowsFoundationPackageId"/>
            property.
            </para>
            </remarks>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileWindowsFeatureSelection.m_selectionNode">
            <summary>
            The selection Node.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileWindowsFeatureSelection.Parent">
            <summary>
            Retrieves the package action from which the Windows feature selection is obtained.
            </summary>
            <value>
            The instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction"/> from which
            the Windows feature selection is obtained.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileWindowsFeatureSelection.Name">
            <summary>
            Retrieves the name of the Windows feature.
            </summary>
            <value>
            The name of the Windows feature.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileWindowsFeatureSelection.Enabled">
            <summary>
            Retrieves or sets the installation state of the Windows feature.
            </summary>
            <value>
            The installation state of the Windows feature.
            </value>
            <remarks>
            The installation state of the Windows feature will change after you apply the answer file
            containing this AnswerFileWindowsFeatureSelection.
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileWindowsFeatureSelection.Remove">
            <summary>
            Removes the Windows feature selection from answer file.
            </summary>
            <remarks>
            You should not continue to use this object after this method is called.
            </remarks>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.WindowsFeatureValidationSubject">
            <summary>
            Specifies the subject object associated with an instance of 
            <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult"/>.
            </summary>
            <remarks>
            When validation fails upon package actions in answer file, the <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.Subject"/>
            property will return an instance of this class.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.WindowsFeatureValidationSubject.PackageAction">
            <summary>
            Retrieves the package action this validation subject is associated with.
            </summary>
            <value>
            The package action this validation subject is associated with.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.WindowsFeatureValidationSubject.Path">
            <summary>
            Retrieves the full path from the root feature name to the feature that the validation warning or error
            occurred on. The feature names are delimited by the forward slash (/) character.
            </summary>
            <value>
            The full path from the root feature name to the feature that the validation warning or error occurred on.
            </value>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.InternalAnswerFileWindowsFeatureSelectionCollection">
            <summary>
            Concrete class for AnswerFileWindowsFeatureSelection collection
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileWindowsFeatureSelectionCollection">
            <summary>
            Represents collection of Windows Feature Selection in an answer file.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileWindowsFeatureSelectionCollection.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction)">
            <summary>
            Constructor
            </summary>
            <param name="parent">The PackageAction object this collection belongs to.</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileWindowsFeatureSelectionCollection.Create(System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions)">
            <summary>
            Creates or retrieves a Windows feature selection.
            </summary>
            <param name="name">The name of the Windows feature selection.</param>
            <param name="createOption">The enumeration element that determines whether to return the existing selection or throw an exception when one already exists.</param>
            <returns>An <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileWindowsFeatureSelection"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="name"/> is <c>null</c> or empty.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if there is already a AnswerFileWindowsFeatureSelection for <paramref name="name"/> and createOption equals to CreateOptions.FailIfExists.</exception>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ReadOnlyKeyedCollection`2">
            <summary>
            Provide read-only adaptor on an existing instance of 
            <see cref="T:System.Collections.ObjectModel.KeyedCollection`2"/>.
            </summary>
            <typeparam name="TKey">Type of the key.</typeparam>
            <typeparam name="TValue">Type of the value.</typeparam>
            
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ReadOnlyKeyedCollection`2.#ctor(System.Collections.ObjectModel.KeyedCollection{`0,`1})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ReadOnlyKeyedCollection`2"/>
            on a writable KeyedCollection.
            </summary>
            <param name="writableCollection">A writable KeyedCollection to be adapted.</param>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ReadOnlyKeyedCollection`2.Item(`0)">
            <summary>
            Retrieves the element with the specified key.
            </summary>
            <param name="key">The key of the element to retrieve.</param>
            <returns>The element with the specified key. If an element with the specified key is not found, an exception is thrown.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Thrown if an element with the specified key does not exist in the collection.</exception>
            
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ReadOnlyKeyedCollection`2.Item(System.Int32)">
            <summary>
            Retrieves the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to retrieve.</param>
            <returns>The element at the specified index.</returns>
            <remarks>If TKey is Int32, this property masks the inherited Item property that takes an numeric index.
            In this case, you can access the inherited property by casting ReadOnlyKeyedCollection to IList&lt;TValue&gt; 
            or use <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ReadOnlyKeyedCollection`2.GetItemByIndex(System.Int32)"/>.</remarks>
            <exception cref="T:System.NotSupportedException">Throw on setting this property</exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ReadOnlyKeyedCollection`2.GetItemByIndex(System.Int32)">
            <summary>
            Retrieves the element at the specified index
            </summary>
            <param name="index">The zero-based index of the element to retrieve.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ReadOnlyKeyedCollection`2.Count">
            <summary>
            Retrieves the number of elements in the collection.
            </summary>
            <value>
            The number of elements in the collection.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ReadOnlyKeyedCollection`2.IndexOf(`1)">
            <summary>
            Search for the specified object and returns the zero-based index of the first occurrence within the entire collection.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of item within the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ReadOnlyKeyedCollection`2.Contains(`0)">
            <summary>
            Determines whether the collection contains an item with the specified key.
            </summary>
            <param name="key">The key to locate in the collection.</param>
            <returns><c>true</c> if the collection contains an item with the key; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ReadOnlyKeyedCollection`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator to allow iterating through the collection.</returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting">
            <summary>
            Represents a component with setting overrides in an offline image. 
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.Id">
            <summary>
            Represents the identity of the component.
            </summary>
            <value>
            The identity of the component.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.ChildSettingDefinitions">
            <summary>
            Retrieves all top-level setting definitions for this component.
            </summary>
            <value>
            All top-level setting definitions for this component.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.SettingDefinitions">
            <summary>
            Retrieves all setting definitions for this component.
            </summary>
            <value>
            All setting definitions for this component.
            </value>
            <remarks>
            Unlike <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.ChildSettingDefinitions"/>,
            this property does traverse all the way down the tree to give 
            all possible setting definitions within this component.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.Enabled">
            <summary>
            Indicates whether the component has been installed
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.ParentDefinitionContainer">
            <summary>
            Returns the <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingDefinitionContainer"/> 
            interface for the parent setting definition container of this instance. Always returns <c>null</c>.
            </summary>
            <value>
            Since an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting"/>
            always represents the root of setting definition hierarchy for a component, this property
            always returns <c>null</c>.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.Microsoft#ComponentStudio#ComponentPlatformInterface#ISettingDefinitionContainer#ComponentId">
            <summary>
            Gets the identity of the component that owns this setting. Declared as an explicit interface
            implementation because there is already an Id property on the ComponentSetting. This "hides"
            the property unless accessed explicitly through the ISettingDefinitionContainer interface.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.ApplicableConfigurationPasses">
            <summary>
            Retrieves all the possible configuration passes an override can be created on for this component.
            </summary>
            <value>
            All the possible configuration passes an override can be created on for this component.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.CreateSettingOverride(System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)">
            <summary>
            Create a top level setting override.
            </summary>
            <param name="name">Name of the setting.</param>
            <param name="configurationPass">Configuration pass</param>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride"/></returns>
            <exception cref="T:System.NotSupportedException">Thrown if the instance is read-only.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if <c>name</c> is <c>null</c> or empty.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the override cannot be created. </exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.CreateSettingOverride(Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride,System.String)">
            <summary>
            Create a non top level setting override.
            </summary>
            <param name="parent">The parent of the new SettingOverride instance to be created.</param>
            <param name="name">The name of the setting.</param>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride"/></returns>
            <exception cref="T:System.NotSupportedException">Thrown if the instance is read-only.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if <c>parent</c> or <c>name</c> is <c>null</c> or empty.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <c>name</c> does not specify a valid setting.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the override cannot be created (for example, maximum occurrences has been reached). </exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.AddSettingOverride(Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride)">
            <summary>
            Add a top level setting override.
            </summary>
            <param name="newOverride">the instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride"/> to be added.</param>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride"/></returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <c>name</c> is <c>null</c> or empty.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <c>name</c> does not specify a valid setting.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the override cannot be created (for example, maximum occurrences has been reached). </exception>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.ChildSettingOverrides">
            <summary>
            Retrieves all top-level setting overrides for this component.
            </summary>
            <value>
            All top-level setting overrides for this component.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.SettingOverrides">
            <summary>
            Retrieves all setting overrides for this component.
            </summary>
            <value>
            All setting overrides for this component.
            </value>
            <remarks>
            Unlike <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.ChildSettingOverrides"/>,
            this property does traverse all the way down the tree to give 
            all possible setting overrides within this component.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.ParentOverrideContainer">
            <summary>
            Returns the <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingOverrideContainer"/> 
            interface for the parent setting override container of this instance. Always returns <c>null</c>.
            </summary>
            <value>
            Since an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting"/>
            always represents the root of setting override hierarchy for a component, this property
            always returns <c>null</c>.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.RemoveChildSettingOverride(Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride)">
            <summary>
            Remove an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride"/> from direct children
            </summary>
            <param name="settingOverrideToBeRemoved">The instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride"/> to be removed.</param>
            <returns><c>true</c> if the instance is successfully removed. <c>false</c> if the instance is not found.</returns>
            <exception cref="T:System.NotSupportedException">Thrown if the instance is read-only.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if <c>settingOverrideToBeRemoved</c> is <c>null</c> or empty.</exception>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.HasOverrideBelow">
            <summary>
            Checks whether this component has any setting overrides with values beneath it.
            </summary>
            <returns><c>true</c> if the component has some setting overrides with values. <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity)">
            <summary>
            Construct an instance of <c>ComponentSetting</c>
            </summary>
            <param name="componentId">The identity of the component whose settings will be retrieved.</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.ToString">
            <summary>
            Returns display name of the component setting
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>
            Change the category name of the ComponentSetting properties
            and also make top level scalar definitions displayed as properties in a separate category 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.AddScalarSettings(System.ComponentModel.PropertyDescriptorCollection)">
            <summary>
            Provide ability for AnswerFileComponentSetting to add its override
            </summary>
            <param name="propertyCollection"></param>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.ChildOverrideChanged">
            <summary>
            Sets the last child override that was changed. Used to fire event notification
            when a child value was changed and which override caused the change.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting.ChildOverrideRemoved">
            <summary>
            Sets the last child override that was removed. Used to fire event notification
            when a child override was removed and which override it was.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.IScalarSettingPropertyDescriptor">
            <summary>
            Defines an interface that indicates a property that can be mapped to a single value entry in an answer file.
            </summary>
            <remarks>
            <para>
            Various classes in CPI implements <see cref="T:System.ComponentModel.ICustomTypeDescriptor"/> interface to
            allow programmatically retrieving property information (see 
            The <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting"/>,
            <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition"/>,
            <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride"/>,  
            <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Package"/>, and
            <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction"/>). Each instance of 
            these classes exposes a collection of <see cref="T:System.ComponentModel.PropertyDescriptor"/>, 
            with each item in the collection describes a single property. Some of the properties are read-only
            in answer-file-authoring perspective (such as the name and type of a setting), others represent
            single override-able answer file entries (such as the override value of a simple type setting, or the
            source location of a package).
            </para>
            <para>
            If an instance of <see cref="T:System.ComponentModel.PropertyDescriptor"/> implements 
            <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.IScalarSettingPropertyDescriptor"/>,
            it indicates this instance represents a property that can be mapped to a single override-able
            value in answer file. This interface defines properties to configure how these values should be written to
            answer file.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.IScalarSettingPropertyDescriptor.WriteEmptyString">
            <summary>
            Indicates whether the current property value is empty, or specifies whether empty
            property value should be written to answer file.
            </summary>
            <value>
            When this value is retrieved, <c>true</c> indicates the property that the <see cref="T:System.ComponentModel.PropertyDescriptor"/>
            describes has override value in answer file, and the override value is an empty string.
            When this value is set, <c>true</c> specifies that if the property that the <see cref="T:System.ComponentModel.PropertyDescriptor"/>
            describes has an empty value, an empty string will be written to answer file. <c>false</c> specifies that
            in such situation, the answer file entity should be removed. It has no effect if the property that it describes
            has a non-empty value.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.IScalarSettingPropertyDescriptor.WriteImageValue">
            <summary>
            Indicates whether the current property value is the same as the one in the offline image, or specifies whether the
            property value should be written to answer file if it has not been changed.
            </summary>
            <value>
            When this value is retrieved, <c>true</c> indicates the property that the <see cref="T:System.ComponentModel.PropertyDescriptor"/>
            describes has override value in answer file, and the override value is the same as the one in offline image.
            When this value is set, <c>true</c> specifies that if the property that the <see cref="T:System.ComponentModel.PropertyDescriptor"/>
            describes has not been changed, the original value in the offline image will be written to answer file. <c>false</c> specifies that
            in such situation, the answer file entity should be removed. It has no effect if the property that it describes
            has been changed.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.IScalarSettingPropertyDescriptor.IsImageValueDefined">
            <summary>
            Indicates whether the property that the <see cref="T:System.ComponentModel.PropertyDescriptor"/>
            describes has value in offline image.
            </summary>
            <value><c>true</c> indicates the property that the <see cref="T:System.ComponentModel.PropertyDescriptor"/>
            describes has value in offline image, <c>false</c> otherwise.</value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.IScalarSettingPropertyDescriptor.Definition">
            <summary>
            Retrieves the object that defines the property.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition"/> or
            <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ImageWindowsFeatureSelection"/>.
            </value>
            <remarks>
            <para>
            If the property being described by <see cref="T:System.ComponentModel.PropertyDescriptor"/> is a setting override,
            then an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition"/> that 
            describes the override is returned.
            </para>
            <para>
            If the property being described by <see cref="T:System.ComponentModel.PropertyDescriptor"/> is a Windows feature selection,
            then an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ImageWindowsFeatureSelection"/> that
            represents the original selection in offline image is returned.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.IScalarSettingPropertyDescriptor.Override">
            <summary>
            Retrieves the object containing an overridden value.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition"/> or
            <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ImageWindowsFeatureSelection"/>.
            </value>
            <remarks>
            <para>
            If the property being described by <see cref="T:System.ComponentModel.PropertyDescriptor"/> is a setting override,
            then an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride"/> that 
            describes the override is returned.
            </para>
            <para>
            If the property being described by <see cref="T:System.ComponentModel.PropertyDescriptor"/> is a Windows feature selection,
            then an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ImageWindowsFeatureSelection"/> that
            represents the current selection in answer file is returned.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ScalarSettingPropertyDescriptor.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride)">
            <summary>
            Create a property descriptor for an override of
                1) a scalar list item or 
                2) an unknown override (no definition or no image associated with an unattend)
            this override is displayed in the answer file editor and can not be deleted in the property editor
            The property editor shows its Value property but don't allow user to remove (reset) it.
            </summary>
            <param name="settingOverride"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ScalarSettingPropertyDescriptor.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition,System.String)">
            <summary>
            Create a property descriptor for a scalar setting under a SettingDefinition
            </summary>
            <param name="parentDefinition"></param>
            <param name="settingName"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ScalarSettingPropertyDescriptor.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride,System.String)">
            <summary>
            Create a property descriptor for a scalar setting under a SettingOverride
            </summary>
            <param name="parentOverride"></param>
            <param name="settingName"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ScalarSettingPropertyDescriptor.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting,System.String)">
            <summary>
            Create a property descriptor for a scalar setting directly under a component
            </summary>
            <param name="parentComponent"></param>
            <param name="settingName"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ScalarSettingPropertyDescriptor.FindDefinitionAndImageValue(Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting,System.String)">
            <summary>
            Find default value of the override inside the associated image
            </summary>
            <param name="component"></param>
            <param name="settingPath"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ScalarSettingPropertyDescriptor.OverrideEqualsImageValue">
            <summary>
            Returns true if the values are equal, false otherwise. This takes into account that the override might
            be a string array value and not a simple string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ScalarSettingPropertyDescriptor.Description">
            <summary>
            Generate 2 lines of definition for this scalar setting
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ScalarSettingPropertyDescriptor.GetEditor(System.Type)">
            <summary>
            Provide custom editor for special types
            </summary>
            <param name="editorBaseType"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CollectionToComboBoxItemConverter">
            <summary>
            Convert enumerationValues in a collection into combo box enumerationValues in the property grid
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ExcludeEnumConverter">
            <summary>
            Convert that allows excluding a value from an enum
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ChangeCategoryPropertyDescriptor.#ctor(System.ComponentModel.PropertyDescriptor,System.String)">
            <summary>
            Create a wrapper of another descriptor and override the category name
            </summary>
            <param name="otherDescriptor"></param>
            <param name="newCategory"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ChangeCategoryPropertyDescriptor.#ctor(System.ComponentModel.PropertyDescriptor,System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile)">
            <summary>
            Change category and also set dirty flag of specified answerFile when users change the value.
            </summary>
            <param name="otherDescriptor"></param>
            <param name="newCategory"></param>
            <param name="answerFile"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ChangeDisplayNamePropertyDescriptor.#ctor(System.ComponentModel.PropertyDescriptor,System.String)">
            <summary>
            Create a wrapper of another descriptor and override the display name
            </summary>
            <param name="otherDescriptor"></param>
            <param name="newDisplayName"></param>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass">
            <summary>
            Defines the list of configuration passes used by Windows Setup.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass.windowsPE">
            <summary>
            The answer file is applied to the online Windows PE pass.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass.offlineServicing">
            <summary>
            The answer file is applied to the offline target image. Only data settings are applied to the image. Answer file actions are not run during this pass.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass.generalize">
            <summary>
            All machine-specific information is removed from the image. Some settings that were in sysprep.inf are applied during this pass.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass.specialize">
            <summary>
            Creates machine-specific information for the image. Some Sysprep and Unattend.txt settings are applied during this pass. 
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass.auditSystem">
            <summary>
            (Optional) Processes winbom:Factory settings before logon - known from state tables.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass.auditUser">
            <summary>
            (Optional) Processes winbom:Factory settings after logon - known from state tables.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass.oobeSystem">
            <summary>
            This pass includes pre-oobe settings. This pass includes settings from winbom:OOBE and oobeinfo.ini settings - known from state tables.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions">
            <summary>
            Determines whether to return the existing entity or throw an exception when one already exists.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions.FailIfExists">
            <summary>
            Throws an exception when the entity already exists.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions.ReturnExisting">
            <summary>
            Returns the existing entity.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi">
            <summary>
            Represents the root object from which other types of Microsoft Component Platform Interface objects
            can be created.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.Instance">
            <summary>
            Retrieves the only instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi"/> class.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi"/> class.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.CreateAnswerFile(Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile"/>.
            </summary>
            <param name="image">
            The offline image that the answer file will be associated with. This parameter can be <c>null</c>.
            </param>
            <remarks>
            <para>
            If the <paramref name="image"/> parameter is <c>null</c>, the answer file is not associated with any offline image.
            </para>
            <para>
            If you create a new answer file without associating it to a Windows image, you can add components and settings 
            to that answer file, but you will not be able to validate the answer file.  
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.OpenAnswerFile(System.String)">
            <summary>
            Opens an existing answer file. 
            </summary>
            <param name="path">
            Specifies the path to the answer file.
            </param>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="path"/> is <c>null</c>.</exception>
            <exception cref="T:System.Xml.XmlException">Thrown if answer file format error.</exception>
            <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Thrown if answer file schema validation failed.</exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.OpenAnswerFile(System.String,System.String)">
            <summary>
            Opens an existing answer file. 
            </summary>
            <param name="path">
            Specifies path to the answer file.
            </param>
            <param name="imagePath">
            Specifies the path to the image to use for the answer file. 
            If it is <c>null</c> or empty then no image is associated to the answer file.
            </param>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="path"/> or <paramref name="imagePath"/> is <c>null</c>.</exception>
            <exception cref="T:System.Xml.XmlException">Thrown if answer file format error.</exception>
            <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Thrown if answer file schema validation failed.</exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.OpenAnswerFile(System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo)">
            <summary>
            Open an existing answer file. 
            </summary>
            <param name="path">
            Specifies the path to the answer file.
            </param>
            <param name="imageInfo">
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo"/>
            that describes the offline image that the answer file will be associated to.
            If it is <c>null</c> or empty then no image is associated to the answer file.
            </param>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="path"/> or <paramref name="imageInfo"/> is <c>null</c>.</exception>
            <exception cref="T:System.Xml.XmlException">Thrown if answer file format error.</exception>
            <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Thrown if answer file schema validation failed.</exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.OpenOfflineImage(System.String)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage"/>.
            </summary>
            <param name="path">String representation of an offline image. See <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.GetOfflineImageInfo(System.String)"/>.</param>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage"/>.</returns>
            <remarks>
            This method requires the catalog file that matches the offline image to be present. For information about creating
            catalog files, see <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.CreateCatalog"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="path"/> is <c>null</c>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if offline image cannot be opened.</exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.OpenOfflineImage(Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage"/>
            </summary>
            <param name="imageInfo">An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo"/> that describes the offline image.</param>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage"/>.</returns>
            <remarks>
            This method requires the catalog file that matches the offline image to be present. For information about creating
            catalog files, see <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.CreateCatalog"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="imageInfo"/> is <c>null</c>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if offline image cannot be opened.</exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.OpenImageCatalog(System.String)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage"/> from a catalog file.
            </summary>
            <param name="catalogFile">The path of the catalog file.</param>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage"/></returns>
            <remarks>This is a special case of <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.OpenOfflineImage(System.String)"/>.</remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.GetOfflineImageInfo(System.String)">
            <summary>
            Returns an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo"/> 
            that describes an offline image.
            </summary>
            <param name="path">Path of the offline image .</param>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo"/> 
            that describes the offline image.</returns>
            <remarks>
            <para>
            The <paramref name="path"/> value can be a path of the root folder of an offline image,
            or a path of a catalog file, or any string that is obtained by
            <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.ToString"/> call. 
            </para>
            <para>
            The returned object can be passed to <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.OpenOfflineImage(Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo)"/>
            to open the offline image.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="path"/> is <c>null</c>.</exception>
            <exception cref="T:System.FormatException">Thrown if <paramref name="path"/> is not one of the format described in Remarks section.</exception>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.OpenOfflineImage(Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo)"/>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.OpenWim(System.String)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.WimInfo"/> 
            that describes all images inside a Windows image(.wim) file.
            </summary>
            <param name="wimPath">The path of the .wim file.</param>
            <returns>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.WimInfo"/> 
            that describes one or more Windows images inside of a .wim file. 
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="wimPath"/> is <c>null</c>.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if the wim file specified by <paramref name="wimPath"/> does not exist.</exception>
            <exception cref="T:System.IO.InvalidDataException">Thrown if the wim file specified by <paramref name="wimPath"/> contains invalid data.</exception>
            <exception cref="T:System.ComponentModel.Win32Exception">Thrown if the wim file specified by <paramref name="wimPath"/> cannot be opened.</exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.OpenPackage(System.String)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Package"/>.
            </summary>
            <param name="path">
            Specifies a path to a .cab file or folder containing package files.
            </param>
            <returns>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Package"/> that 
            describes the package.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="path"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.SetPathToServicingStack(System.String)">
            <summary>
            Sets the path to the servicing stack and bypasses registry check.
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.GetPathToShimServicingStack(System.String,System.String)">
            <summary>
            Returns the full path to the folder containing the servicing components that
            this version of the CPI API is bound to.
            </summary>
            <param name="windowsDirectoryName"></param>
            <param name="moduleName"></param>
            <returns>
            The full path to the folder containing the servicing components that
            this version of the CPI API is bound to.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.ReleasePathToServicingStack">
            <summary>
            Returns the full path to the folder containing the servicing components that
            this version of the CPI API is bound to.
            </summary>
            <returns>
            The full path to the folder containing the servicing components that
            this version of the CPI API is bound to.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.GetPathToServicingStack">
            <summary>
            Returns the full path to the folder containing the servicing components that
            this version of the CPI API is bound to.
            </summary>
            <returns>
            The full path to the folder containing the servicing components that
            this version of the CPI API is bound to.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.Obfuscate(System.String)">
            <summary>
            Performs obfuscation on a string.
            </summary>
            <param name="clearTextString">The clear text string to be obfuscated.</param>
            <returns>The obfuscated string.</returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.PlatformImplementation">
            <summary>
            Because of the reverse dependency pattern used in Cpi design, Cpi can't have dependency on
            the implementation, so we can't just add reference and use classes from the implementation dll
            We need to load the dll dynamically and use reflection to create classes in the implementation layer
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Credential">
            <summary>
            Class that represents a credential (domain, username, password)
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Credential.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride)">
            <summary>
            Don't call directly. Please use AnswerFileSettingOverride.Factory to create an instance of this class.
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Credential.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride,Microsoft.ComponentStudio.ComponentPlatformInterface.Node,System.Boolean)">
            <summary>
            Don't call directly. Please use AnswerFileSettingOverride.Factory to create an instance of this class.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Credential.Domain">
            <summary>
            Domain name used to connect to the UNC path (optional)
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Credential.UserName">
            <summary>
            user name used to connect to the UNC path (optional)
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Credential.Password">
            <summary>
            password used to connect to the UNC path (optional)
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.FindPackageProgressChangedEventArgs">
            <summary>
            Represents the event arguments used in the <see cref="E:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareInfo.FindPackageProgressChanged"/> event.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.FindPackageProgressChangedEventArgs.#ctor(System.String)">
            <summary>
            Constructs a new instance of FindPackagesHandler.
            </summary>
            <param name="folder">The folder currently being searched.</param>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.FindPackageProgressChangedEventArgs.CurrentFolder">
            <summary>
            Retrieves the folder that is currently being searched for packages.
            </summary>
            <value>
            The folder that is currently being searched for packages.
            </value>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareInfo">
            <summary>
            Represents information on a distribution share.
            </summary>
        </member>
        <member name="E:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareInfo.FindPackageProgressChanged">
            <summary>
            Event fired during the FindPackagesInFolder method to allow the process to be canceled.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareInfo.FindPackagesInFolder(System.String)">
            <summary>
            Finds all packages within the specified folder and it's subfolders.
            </summary>
            <param name="folder">The folder to be searched.</param>
            <returns>A collection of paths to each package that was found.</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareInfo.FindPackagesInFolder(System.String,System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Recursive routine that searches for packages in a folder. Returns false if user canceled.
            </summary>
            <param name="folder"></param>
            <param name="packages"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareInfo.IsDistributionShare(System.String)">
            <summary>
            Checks whether a specified folder contains a distribution share.
            </summary>
            <param name="path">The path to the folder in question.</param>
            <returns>
            <c>true</c> if path contains a distribution share, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareInfo.ImportPackage(System.String,System.String)">
            <summary>
            Imports a package from a specific path to a distribution share folder.
            </summary>
            <param name="sourcePath">The path to the package. This can be a .cab file or a folder.</param>
            <param name="distributionSharePath">The path to distribution share folder.</param>
            <returns>
            <c>true</c> if all packages are imported; <c>false</c> if one of the package already exists.
            </returns>
            <remarks>
            <paramref name="sourcePath"/> can either be a .cab file or a folder containing the .cab files. 
            If it is a folder, all .cab files in the folder are imported.
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareInfo.CreateDistributionShare(System.String)">
            <summary>
            Creates a distribution share on a specified path.
            </summary>
            <param name="distributionPath">The path of the specified folder.</param>
            <remarks>
            If the specified folder does not exist, it is created. 
            This method creates the designated folder structure for distribution shares.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareInfo.PackagesFolder">
            <summary>
            Retrieves the name of the packages folder.
            </summary>
            <value>
            The name of the packages folder.
            </value>
            <remarks>
            The default name is Packages.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareInfo.OemFolder">
            <summary>
            Retrieves the name of the OEM folder.
            </summary>
            <value>
            The name of the OEM folder.
            </value>
            <remarks>
            The default name is "$OEM$ Folders".
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareInfo.OutOfBoxDriversFolder">
            <summary>
            Retrieves the name of the out-of-box drivers folder.
            </summary>
            <value>
            The name of the out-of--box-drivers folder.
            </value>
            <remarks>
            The default folder is "Out-Of-Box Drivers". 
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareInfo.OemKeyName">
            <summary>
            Retrieves the key name of the OEM folder.
            </summary>
            <value>
            The key name of the OEM folder.
            </value>
            <remarks>
            The default key name is "$OEM$".
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareInfo.PackageCabExtension">
            <summary>
            Retrieves the extension of the package .cab file.
            </summary>
            <value>
            The extension of the package .cab file.
            </value>
            <remarks>
            The default extension is ".cab".
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareInfo.PackageMumExtension">
            <summary>
            Retrieves the extension of the package .mum file.
            </summary>
            <value>
            The extension of the package .mum file.
            </value>
            <remarks>
            The default extension is ".mum".
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareInfo.OutOfBoxDriverExtension">
            <summary>
            Retrieves the out-of-the-box driver extension.
            </summary>
            <value>
            The out-of-the-box driver extension.
            </value>
            <remarks>
            The default extension is ".inf".
            </remarks>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareResources.CreateDoesNotExist">
            <summary>
              Looks up a localized string similar to The specified folder {0} does not exist..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareResources.InvalidFileImport">
            <summary>
              Looks up a localized string similar to The file {0} is not a valid package file..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareResources.OemFolder">
            <summary>
              Looks up a localized string similar to $OEM$ Folders.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareResources.OemKeyName">
            <summary>
              Looks up a localized string similar to $oem$.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareResources.OutOfBoxDriverExtension">
            <summary>
              Looks up a localized string similar to .inf.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareResources.OutOfBoxDriversFolder">
            <summary>
              Looks up a localized string similar to Out-of-Box Drivers.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareResources.PackageCabExtension">
            <summary>
              Looks up a localized string similar to .cab.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareResources.PackageMumExtension">
            <summary>
              Looks up a localized string similar to .mum.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DistributionShareResources.PackagesFolder">
            <summary>
              Looks up a localized string similar to Packages.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath">
            <summary>
            Encapsulates answer file actions required for Windows setup to install out-of-box device drivers.
            </summary>
            <remarks>
            <para>
            Out-of-box device drivers are installed by overriding certain settings of certain Windows components in 
            certain configuration passes. If these setting overrides are specified properly in answer file, the 
            appropriate Windows component will perform the actual installation during Windows setup.
            </para>
            
            <para>
            This class encapsulates all the details such as which Windows component will be responsible to install out-of-box
            device drivers for a certain configuration pass.
            </para>
            
            <para>
            When creating setting overrides in answer file for out-of-box device driver installation,
            you will need to specify the location of the out-of-box device driver, the configuration
            pass that the setting will be applied, and user credentials to be used to access the location.
            (if it's on a network path).
            </para>
            
            <para>
            You can use <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPathCollection.Create(System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions)"/>
            to create setting overrides in answer file for out-of-box device driver installation. You can use 
            <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.GetDriverPaths(Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)"/>
            to get the instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPathCollection"/>
            from the answer file.
            </para>
            </remarks>
            <seealso cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPathCollection"/>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.GetDriverPaths(Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)"/>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPathCollection.Create(System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions)"/>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride)">
            <summary>
            Don't call directly. Please use AnswerFileSettingOverride.Factory to create an instance of this class.
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride,Microsoft.ComponentStudio.ComponentPlatformInterface.Node,System.Boolean)">
            <summary>
            Don't call directly. Please use AnswerFileSettingOverride.Factory to create an instance of this class.
            </summary>
            <param name="parent"></param>
            <param name="xmlNode"></param>
            <param name="ignoreDefinition"></param>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath.DriverLocation">
            <summary>
            Retrieves the path to the out-of-box device driver folder. The path can be a UNC path.
            </summary>
            <value>
            The path to the out-of-box device driver folder.
            </value>
            <remarks>
            The path is specified in <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPathCollection.Create(System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions)"/> .
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath.DriverLocationSettingName">
            <summary>
            Gets the name of the Path element for a driver path list type.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath.GetSettingPath(Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)">
            <summary>
            Retrieves the path of the root setting that can be overridden to install out-of-box
            device drivers in the specified configuration pass.
            </summary>
            <param name="configurationPass">The configuration pass that the settings will be applied to.</param>
            <value>
            The path of the root setting that can be overridden to install out-of-box
            device drivers in the specified configuration pass.
            </value>
            <remarks>
            <para>
            The <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath"/> class
            encapsulates most of the detailed settings that need to be overridden to install out-of-box device drivers.
            However there may be situations that applications may want to access detailed setting information,
            such as retrieving definitions (metadata) of those settings. Applications can call this method to 
            obtain the path of the root setting and then work with <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride"/> 
            and <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition"/> objects.
            </para>
            <para>
            It is possible to use the returned setting path and work with <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride"/>
            instances directly to override settings required
            for out-of-box device driver installation. Doing so requires detailed knowledge of the appropriate components
            and settings. Our recommendation is to use this class as much as possible.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath.DriverComponentNameWinPE">
            <summary>
            Gets the name of the component containing the driver list for WinPE pass.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath.DriverComponentNameNonWinPE">
            <summary>
            Gets the name of the component containing the driver list for non-WinPE pass.
            </summary> 
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath.ConfigurationPasses">
            <summary>
            Retrieves a collection of all configuration passes in which driver 
            path settings can be applied during setup.
            </summary>
            <value>
            A collection of all configuration passes in which driver 
            path settings can be applied during setup.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath.GetApplicableConfigurationPasses(System.String)">
            <summary>
            Retrieves all configuration passes in which the specified Windows component will perform out-of-box
            device driver installation.
            </summary>
            <param name="driverComponentName">The Windows component that will perform out-of-box device driver installation.</param>
            <returns>
            A collection of all configuration passes in which the specified Windows component will perform out-of-box
            device driver installation.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath.GetApplicableComponentName(Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)">
            <summary>
            Retrieves the name of the Windows component that is responsible to install
            out-of-box device drivers during Windows setup in the specified configuration pass.
            </summary>
            <param name="pass">The configuration pass.</param>
            <returns>
            The name of the Windows component. <c>null</c> if no Windows component can
            perform driver installation in the specified configuration pass.
            </returns>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath.Domain">
            <summary>
            Retrieves or sets the domain name used to access driver files
            if they are placed on a remote machine.
            </summary>
            <value>
            The domain name used to connect to the remote machine to access the driver files.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath.UserName">
            <summary>
            Retrieves or sets the user name used to access driver files
            if they are placed on a remote machine.
            </summary>
            <value>
            The user name used to connect to the remote machine to access the driver files.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath.Password">
            <summary>
            Retrieves or sets the password used to access driver files
            if they are placed on a remote machine.
            </summary>
            <value>
            The password used to connect to the remote machine to access the driver files.
            </value>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPathCollection">
            <summary>
            Extracts a collection of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath"/>
            from an answer file.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPathCollection.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile,Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)">
            <summary>
            Construct an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPathCollection"/>.
            </summary>
            <param name="answerFile">The AnswerFile object this driver path collection belongs to.</param>
            <param name="configurationPass">The ConfigurationPass this collection applies to.</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPathCollection.Create(System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath"/> 
            and adds appropriate setting overrides to the answer file.
            </summary>
            <param name="driverFolder">Path to the folder containing the driver.</param>
            <param name="createOption">
            The enumeration element that determines whether to return the existing instance or 
            throw an exception when the same driver (identified by <paramref name="driverFolder"/>)
            has already been added to answer file.</param>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="driverFolder"/> is <c>null</c> or empty.</exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the driver (identified by <paramref name="driverFolder"/>) 
            has already been added to answer file, and <paramref name="createOption"/> is 
            <see cref="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions.FailIfExists"/>.</exception>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPathCollection.Item(System.String)">
            <summary>
            Gets the DriverPath with the specified path or null.
            </summary>
            <param name="folderPath"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPathCollection.Contains(System.String)">
            <summary>
            Checks whether an out-of-box device driver represented by <paramref name="folderPath"/> is already
            in the collection.
            </summary>
            <param name="folderPath">The path to the folder that contains the out-of-box device driver files.</param>
            <returns><c>true</c> if the device driver is found in the collection. <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPathCollection.Count">
            <summary>
            Retrieves the number of items in the collection.
            </summary>
            <value>
            The number of items in the collection.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPathCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator to allow iterating through the collection.
            </returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity">
            <summary>
            Represents the identity of a Windows component.
            </summary>
            <remarks>
            The properties of this class comes from assembly manifest schema. For detail descriptions of each property, 
            see "Assembly Manifests" in MSDN library.
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.#ctor(System.String,System.String,System.Version,System.String,System.String,System.String)">
            <summary>
            Constructs an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity"/>.
            </summary>
            <param name="name">The name of the component or package.</param>
            <param name="publicKeyToken">The public key token of the component or package. See <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.PublicKeyToken"/></param>
            <param name="version">(Optional)The version of the component or package.</param>
            <param name="processorArchitecture">The processor architecture of the component or package. See <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.ProcessorArchitecture"/></param>
            <param name="language">The language of the component or package. See <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.Language"/></param>
            <param name="versionScope">(Optional)The version scope of the component or package. See <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.VersionScope"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="name"/>, <paramref name="publicKeyToken"/>,
            <paramref name="processorArchitecture"/>, or <paramref name="language"/> is <c>null</c>.
            </exception>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.Name">
            <summary>
            Specifies the name of the Windows component or package.
            </summary>
            <value>
            The name of the Windows component or package.
            </value>
            <remarks>
            This property is case sensitive.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.Version">
            <summary>
            Specifies the version of the Windows component or package.
            </summary>
            <value>
            The version of the Windows component or package.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.ProcessorArchitecture">
            <summary>
            Specifies the processor architecture of the component or package.
            </summary>
            <value>
            The processor architecture of the component or package.
            </value>
            <remarks>
            This property is not case sensitive.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.PublicKeyToken">
            <summary>
            Specifies the public key token of the component or package. 
            </summary>
            <value>
            The public key token of the component or package.
            </value>
            <remarks>
            Microsoft public key token is a string consists of 16 hexadecimal digits.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.Language">
            <summary>
            Retrieves the language code. For more information, see "Language Codes" in the MSDN Library.
            </summary>
            <value>
            The language code string.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.VersionScope">
            <summary>
            Specifies the version scope of the Windows component or package.
            </summary>
            <value>
            The version scope of the Windows component or package
            </value>
            <remarks>
            This property is not case sensitive.
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.ToVersionlessId">
            <summary>
            Creates a version-less clone of this Identity instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.ToString">
            <summary>
            Convert identity into a string
            </summary>
            <returns>a string</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.ToFriendlyString">
            <summary>
            Convert identity into a friendly display string
            </summary>
            <returns>a string</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.Parse(System.String)">
            <summary>
            Converts the string representation of an identity to its 
            <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity"/> equivalent.
            </summary>
            <param name="id">A string representing an identity.</param>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity"/>.</returns>
            <remarks>
            The string representation can be obtained by calling <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.ToString"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.FormatException">Thrown if <paramref name="id"/> cannot be converted to <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity"/>.</exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.op_Equality(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity,Microsoft.ComponentStudio.ComponentPlatformInterface.Identity)">
            <summary>
            Determines whether two instances of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity"/> are equal.
            </summary>
            <param name="id1">The first identity to compare.</param>
            <param name="id2">The second identity to compare.</param>
            <returns>
            <c>true</c> if the two identities are equal. <c>false</c> otherwise.
            </returns>
            <remarks>
            Two instances of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity"/> are considered equal if
            all of the followings are true:
            <list type="bullet">
                <item>
                    <description>The two identities' <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.Name"/>,
            <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.PublicKeyToken"/>, and
            <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.Language"/>
            properties match respectively in case-sensitive manner.
                    </description>
                </item>
                <item>
                    <description>The two identities' 
            <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.ProcessorArchitecture"/> and 
            <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.VersionScope"/>
            properties match respectively in case-insensitive manner.
                    </description>
                </item>
                <item>
                    <description>The two identities' <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.Version"/>
            property matches exactly, or at least one of them is <c>null</c>.(version-less)
                    </description>
                </item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.op_Inequality(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity,Microsoft.ComponentStudio.ComponentPlatformInterface.Identity)">
            <summary>
            Determines whether two instances of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity"/> 
            are not equal.
            </summary>
            <param name="id1">The first identity to compare.</param>
            <param name="id2">The second identity to compare.</param>
            <returns>
            <c>true</c> if the two identities are not equal. <c>false</c> otherwise.
            </returns>
            <remarks>
            See <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.op_Equality(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity,Microsoft.ComponentStudio.ComponentPlatformInterface.Identity)"/>
            for definition of identity equality.
            </remarks>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.op_Equality(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity,Microsoft.ComponentStudio.ComponentPlatformInterface.Identity)"/>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current 
            <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity"/> instance.
            </summary>
            <param name="obj">The object to compare to.</param>
            <returns>
            <c>true</c> if <paramref name="obj"/> is an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity"/>
            and it defines the same identity information of the current object.
            </returns>
            <remarks>
            See <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.op_Equality(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity,Microsoft.ComponentStudio.ComponentPlatformInterface.Identity)"/>
            for definition of identity equality.
            </remarks>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.op_Equality(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity,Microsoft.ComponentStudio.ComponentPlatformInterface.Identity)"/>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity.GetHashCode">
            <summary>
            Retrieves the hash code for the current <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity"/> instance.
            </summary>
            <returns>
            The hash code for the current <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Identity"/> instance.
            </returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.NoEditor">
            <summary>
            Editor that prevent PropertyGrid to show ... button
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.AccessArraySettingThroughArrayString">
            <summary>
              Looks up a localized string similar to Access &apos;StringArrayValue&apos; for string array setting..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.AccessNonArraySettingThroughValue">
            <summary>
              Looks up a localized string similar to Access &apos;Value&apos; for settings other than string array..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.AnswerFileComplexSettingHasValue">
            <summary>
              Looks up a localized string similar to The complex setting {0} has a value..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.AnswerFileException_AccessDenied">
            <summary>
              Looks up a localized string similar to Access denied..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.AnswerFileException_FileErrors">
            <summary>
              Looks up a localized string similar to Errors occurred accessing one or more files referenced in the answer file..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.AnswerFileException_NoOfflineImage">
            <summary>
              Looks up a localized string similar to Cannot find Windows image information in answer file..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.AnswerFilePathNotSpecified">
            <summary>
              Looks up a localized string similar to Answer file path is not specified..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.AnswerFileRootNotFound">
            <summary>
              Looks up a localized string similar to The &lt;unattend&gt; element cannot be found. Verify &lt;unattend&gt; element is the root and is in the proper namespace..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.AnswerFileValidationFailed">
            <summary>
              Looks up a localized string similar to The answer file contains invalid data..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ArgumentException_ExpectComponentSettingSettingDefinitionOrOverride">
            <summary>
              Looks up a localized string similar to Expected ComponentSetting, SettingDefinition or SettingOverride.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ArgumentException_ExpectOverrideWithNoDefinition">
            <summary>
              Looks up a localized string similar to Expected SettingOverride with InvalidSettingDefinition.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ArgumentException_ExpectScalarOverride">
            <summary>
              Looks up a localized string similar to {0} is not a scalar setting..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ArgumentException_InvalidFeatureName">
            <summary>
              Looks up a localized string similar to The Windows feature {0} is not in the selected package..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ArgumentException_InvalidStringIdFormat">
            <summary>
              Looks up a localized string similar to Invalid string identification format; the string must be in the format {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ArgumentException_StringParamNull">
            <summary>
              Looks up a localized string similar to The string parameter cannot be null or empty.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CannotCreateSettingOverrideExceedMaxOccurrences">
            <summary>
              Looks up a localized string similar to The maximum occurrences of this setting have been reached..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CannotDetermineDefaultConfigurationPass">
            <summary>
              Looks up a localized string similar to Cannot determine the default configuration pass for this setting..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CannotDetermineFullIdentityOfComponentNameFromAnswerFile">
            <summary>
              Looks up a localized string similar to Cannot determine the full identity of component {0} from answer file. This is because no Windows image is associated with the answer file, or the associated image does not contain the component..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CannotDetermineOfflineImageType">
            <summary>
              Looks up a localized string similar to Cannot determine the type of Windows image..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CannotGenerateCatalogFromUnknowImage">
            <summary>
              Looks up a localized string similar to Cannot create catalog file because there&apos;s not sufficient information to determine the Windows image..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CannotOpenCatalog_CatalogPathKnown">
            <summary>
              Looks up a localized string similar to Cannot open the catalog file {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CannotOpenCatalog_ImageNameKnown">
            <summary>
              Looks up a localized string similar to Cannot open the catalog file associated with the Windows image {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CannotRemoveSettingOverrideBelowMinOccurrences">
            <summary>
              Looks up a localized string similar to The minimum occurrences of this setting have been reached..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CannotRetrieveInfoFromWim">
            <summary>
              Looks up a localized string similar to Cannot retrieve information from Windows image file {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CannotSetNilForComplexType">
            <summary>
              Looks up a localized string similar to Cannot set xsi:nil attribute for complex setting..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CannotSetValueForComplexType">
            <summary>
              Looks up a localized string similar to Cannot set the value for a complex type..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CannotSetValueForRemovedItem">
            <summary>
              Looks up a localized string similar to Cannot set the value for a list item that has been removed..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CatalogImageNameFormat">
            <summary>
              Looks up a localized string similar to {0}(Catalog).
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CatalogProgressCheckingFolder">
            <summary>
              Looks up a localized string similar to Checking Folder..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CatalogProgressCleanup">
            <summary>
              Looks up a localized string similar to Cleaning up....
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CatalogProgressCreatingMountFolder">
            <summary>
              Looks up a localized string similar to Creating mount folder: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CatalogProgressCreatingTempFolder">
            <summary>
              Looks up a localized string similar to Creating temp folder: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CatalogProgressDeletingMountFolder">
            <summary>
              Looks up a localized string similar to Deleting mount folder..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CatalogProgressDismountingWIMImage">
            <summary>
              Looks up a localized string similar to Unmounting Windows image: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CatalogProgressDone">
            <summary>
              Looks up a localized string similar to Done..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CatalogProgressMountedWIMImage">
            <summary>
              Looks up a localized string similar to Mounted Windows image..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CatalogProgressMountingWIMImage">
            <summary>
              Looks up a localized string similar to Mounting Windows image: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CatalogProgressSerializingData">
            <summary>
              Looks up a localized string similar to Serializing Data..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CatalogProgressStarting">
            <summary>
              Looks up a localized string similar to Starting..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.CBS_NeedNewServicingStack">
            <summary>
              Looks up a localized string similar to This operation requires a newer version of the Windows OPK or Windows AIK..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ComponentAlreadyExist">
            <summary>
              Looks up a localized string similar to The component already exists in the answer file..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ComponentConfigurationPassNotHaveOverride">
            <summary>
              Looks up a localized string similar to The component does not have any settings for the configuration pass {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ComponentNameNotFoundInOfflineImage">
            <summary>
              Looks up a localized string similar to Component {0} is not found in Windows image..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ComponentNotFoundInOfflineImage">
            <summary>
              Looks up a localized string similar to The component is not found in the Windows image..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ComponentNotHaveOverride">
            <summary>
              Looks up a localized string similar to The component does not have any updated settings. It will not be saved to the answer file..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Deployement_Id_Name">
            <summary>
              Looks up a localized string similar to Microsoft-Windows-Deployment.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Deployment_CommandLineSettingName">
            <summary>
              Looks up a localized string similar to Path.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Deployment_PathToSynchronousCommandList">
            <summary>
              Looks up a localized string similar to RunSynchronous/RunSynchronousCommand.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Deployment_SynchronousCommandType">
            <summary>
              Looks up a localized string similar to RunSynchronousCommandType.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Deployment_WillRebootSettingName">
            <summary>
              Looks up a localized string similar to WillReboot.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.DisabledValue">
            <summary>
              Looks up a localized string similar to Disabled.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.DMI_Id_Name">
            <summary>
              Looks up a localized string similar to Microsoft-Windows-PnpCustomizationsNonWinPE.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.DMI_PathAndCredentialsTypeName">
            <summary>
              Looks up a localized string similar to PathAndCredentialsType.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.DMI_PathSettingName">
            <summary>
              Looks up a localized string similar to Path.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.DMI_PathToDriverPathList">
            <summary>
              Looks up a localized string similar to DriverPaths/PathAndCredentials.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.DMI_WinPE_Id_Name">
            <summary>
              Looks up a localized string similar to Microsoft-Windows-PnpCustomizationsWinPE.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.DriverPathAlreadyExist">
            <summary>
              Looks up a localized string similar to The driver path {0} already exists in the answer file..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.DuplicateSettingCouldBeOverwritten">
            <summary>
              Looks up a localized string similar to Duplicate setting exists. This setting can be overwritten..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.DynamicKeyNotDefinedForSetting">
            <summary>
              Looks up a localized string similar to A dynamic key is required for the setting..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.EnabledValue">
            <summary>
              Looks up a localized string similar to Enabled.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Error_PropertyValueIsNotValid">
             <summary>
               Looks up a localized string similar to Setting value is not valid.
            Details: {0}.
             </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.FileNotFoundException_FileNotFound">
            <summary>
              Looks up a localized string similar to Cannot find the file {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.IdentityException_InvalidVersionScope">
            <summary>
              Looks up a localized string similar to versionScope should be either &quot;nonSxS&quot; or &quot;SxS&quot;..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ImageCatalogMissing_CatalogPathKnown">
            <summary>
              Looks up a localized string similar to Cannot find the catalog file {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ImageCatalogMissing_ImageNameKnown">
            <summary>
              Looks up a localized string similar to Cannot find the catalog file associated with the Windows image {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ImageCatalogNotMatchImage_CatalogPathKnown">
            <summary>
              Looks up a localized string similar to The catalog file {0} does not match the associated Windows image..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ImageCatalogNotMatchImage_ImageNameKnown">
            <summary>
              Looks up a localized string similar to The catalog file associated with the Windows image {0} is out of date..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ImageNotExistInWim">
            <summary>
              Looks up a localized string similar to The Windows image {0} does not exist in file {1}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.IncorrectListKeyName">
            <summary>
              Looks up a localized string similar to The list key name {0} is incorrect for {1}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InsufficientPrivilege">
            <summary>
              Looks up a localized string similar to You do not have sufficient privileges to perform this action..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidCommandComponentName">
            <summary>
              Looks up a localized string similar to The name specified is not a valid synchronous command component..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidCommandConfigurationPass">
            <summary>
              Looks up a localized string similar to The specified configuration pass does not support processing synchronous commands..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidCpiImplementation">
            <summary>
              Looks up a localized string similar to The Windows System Image Manager files are mismatched. Reinstall the product..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidDriverComponentName">
            <summary>
              Looks up a localized string similar to The name specified is not a valid driver component..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidDriverConfigurationPass">
            <summary>
              Looks up a localized string similar to The specified configuration pass does not support processing drivers..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidIdentity">
            <summary>
              Looks up a localized string similar to The identity is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidImageCatalog_CatalogPathKnown">
            <summary>
              Looks up a localized string similar to The catalog file {0} is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidImageCatalog_ImageNameKnown">
            <summary>
              Looks up a localized string similar to The catalog file for Windows image {0} is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidImageCatalogRevision_CatalogPathKnown">
            <summary>
              Looks up a localized string similar to The catalog file {0} was created with a different version of the application..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidImageCatalogRevision_ImageNameKnown">
            <summary>
              Looks up a localized string similar to The catalog file for Windows image {0} was created with a different version of the application..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidImageLocation">
             <summary>
               Looks up a localized string similar to The location does not contain a valid Windows image or contains files that cannot be opened with read/write privileges. If {0} is a shared location, verify you have read/write access to the location.
            
            .
             </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidImageNameInWim">
             <summary>
               Looks up a localized string similar to The image name {0} is invalid because it contains special characters. The Windows image name in the .wim file must be a valid file name for the Windows operating system.
            
            For information on how to rename a Windows image in a .wim file, see the ImageX technical reference documentation..
             </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidImageRevision">
            <summary>
              Looks up a localized string similar to The specified location contains a Windows image that is not compatible with the current version of Windows..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidOfflineImageUri">
            <summary>
              Looks up a localized string similar to {0} is not a valid Windows image uniform resource identifier..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidOperationException_CannotLoadNew">
            <summary>
              Looks up a localized string similar to Cannot load new file.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidOperationException_CannotSaveToReadOnlyFile">
            <summary>
              Looks up a localized string similar to Cannot save to {0}. The file is read-only.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidOperationException_CannotSaveUnloaded">
            <summary>
              Looks up a localized string similar to Cannot save new or unloaded file.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidOperationException_ObjectIsReadonly">
            <summary>
              Looks up a localized string similar to Cannot modify this object because it is read-only..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidParameter">
            <summary>
              Looks up a localized string similar to Parameter is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidSettingConfigurationPass">
            <summary>
              Looks up a localized string similar to The specified setting cannot be applied to this configuration pass..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidValueForNil">
            <summary>
              Looks up a localized string similar to The value of xsi:nil can only be true or false..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.InvalidWim">
             <summary>
               Looks up a localized string similar to File {0} is not a valid Windows image (.wim) file.
            
            .
             </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.KeyAlreadyExists">
            <summary>
              Looks up a localized string similar to A {0} with {1}={2} already exists..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.KeyContainsSpecialChar">
            <summary>
              Looks up a localized string similar to {0} cannot contain special characters, such as &apos;\&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.KeyExceedMaxLength">
            <summary>
              Looks up a localized string similar to The length of the key exceeds {0}: {1}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.KeyMustHaveValue">
            <summary>
              Looks up a localized string similar to The key {0} of list item {1} must have a value..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MSPublicKeyToken">
            <summary>
              Looks up a localized string similar to 31bf3856ad364e35.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_AssemblyElementName">
            <summary>
              Looks up a localized string similar to assembly.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_AssemblyIdentityElementName">
            <summary>
              Looks up a localized string similar to assemblyIdentity.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_CompanyAttributeName">
            <summary>
              Looks up a localized string similar to company.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_CopyrightAttributeName">
            <summary>
              Looks up a localized string similar to copyright.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_DescriptionAttributeName">
            <summary>
              Looks up a localized string similar to description.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_DisplayNameAttributeName">
            <summary>
              Looks up a localized string similar to displayName.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_IsRemovableAttributeName">
            <summary>
              Looks up a localized string similar to permanenceType.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_KeywordAttributeName">
            <summary>
              Looks up a localized string similar to identifier.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_LanguageAttributeName">
            <summary>
              Looks up a localized string similar to language.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_MumFileName">
            <summary>
              Looks up a localized string similar to update.mum.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_PackageElementName">
            <summary>
              Looks up a localized string similar to package.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_ProcessorArchitectureAttributeName">
            <summary>
              Looks up a localized string similar to processorArchitecture.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_ProductNameAttributeName">
            <summary>
              Looks up a localized string similar to name.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_ProductVersionAttributeName">
            <summary>
              Looks up a localized string similar to version.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_PublickeyTokenAttributeName">
            <summary>
              Looks up a localized string similar to publicKeyToken.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_ReleaseTypeAttributeName">
            <summary>
              Looks up a localized string similar to releaseType.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_SupportInfoAttributeName">
            <summary>
              Looks up a localized string similar to supportInformation.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.MUM_VersionScopeAttributeName">
            <summary>
              Looks up a localized string similar to versionScope.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.NonExistImageLocation">
            <summary>
              Looks up a localized string similar to Cannot find the Windows image location {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.NonExistWimImageUri">
            <summary>
              Looks up a localized string similar to {0} includes a Windows image {1} that does not exist in file {2}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.NoServicingStack">
             <summary>
               Looks up a localized string similar to This application requires version {0} of the Windows OPK or Windows AIK.
            Install this version to correct the problem.
             </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.NotSupportedException_OfflineImageRequired">
            <summary>
              Looks up a localized string similar to A Windows image is required to perform this operation..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.NotUncompressedOfflineImageUri">
            <summary>
              Looks up a localized string similar to {0} is not a valid Windows image folder..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.NotWimImageUri">
            <summary>
              Looks up a localized string similar to {0} is not a valid Windows image uniform resource identifier..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.OperationFailedMessage">
            <summary>
              Looks up a localized string similar to The operation failed to complete..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.OrderNotSpecifiedForRunOnceCommand">
            <summary>
              Looks up a localized string similar to Order for the synchronous command is not specified..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PackageActionAlreadyExist">
            <summary>
              Looks up a localized string similar to The package already exists in the answer file..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PackageActionMergedInAnswerFile">
            <summary>
              Looks up a localized string similar to Duplicate package have been removed from your answer file: {0}: {1}.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PathNotDistributionShare">
            <summary>
              Looks up a localized string similar to The specified folder is not a valid distribution share..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PathNotSpecifiedForDriverPath">
            <summary>
              Looks up a localized string similar to The Path setting is not specified for the driver path..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridCagetory_PackageActionProperties">
            <summary>
              Looks up a localized string similar to Settings.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridCategory_ComponentProperties">
            <summary>
              Looks up a localized string similar to  Properties.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridCategory_PackageProperties">
            <summary>
              Looks up a localized string similar to  Properties.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridCategory_ScalarSettings">
            <summary>
              Looks up a localized string similar to Settings.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridCategory_SettingDefinition">
            <summary>
              Looks up a localized string similar to  Properties.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridCategory_SettingOverride">
            <summary>
              Looks up a localized string similar to  Properties.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridCategory_WindowsFeatureSelection">
            <summary>
              Looks up a localized string similar to Windows Feature Selections.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridDisplayName_Key">
            <summary>
              Looks up a localized string similar to Key.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridHelp_DefaultDeprecatedDescription">
            <summary>
              Looks up a localized string similar to This setting is deprecated..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridHelp_Deprecated">
            <summary>
              Looks up a localized string similar to Deprecated: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridHelp_EnumerationValue">
            <summary>
              Looks up a localized string similar to Valid Values: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridHelp_NoDescription">
            <summary>
              Looks up a localized string similar to No description for this setting.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridHelp_NullableScalarType">
            <summary>
              Looks up a localized string similar to Type: {0} (nullable).
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridHelp_RangeMaxValue">
            <summary>
              Looks up a localized string similar to Max: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridHelp_RangeMinValue">
            <summary>
              Looks up a localized string similar to Min: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridHelp_ScalarType">
            <summary>
              Looks up a localized string similar to Type: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridHelp_StringMaxLength">
            <summary>
              Looks up a localized string similar to MaxLength: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridHelp_StringRegex">
            <summary>
              Looks up a localized string similar to Regular expression: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridValue_AllPasses">
            <summary>
              Looks up a localized string similar to (all).
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PropertyGridValue_Null">
            <summary>
              Looks up a localized string similar to  (null).
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Publish_Canceled">
            <summary>
              Looks up a localized string similar to Configuration set creation was cancelled by the user..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Publish_CannotRepublishAnswerFile">
            <summary>
              Looks up a localized string similar to This answer file is part of a configuration set and may not be used to create a new configuration set..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Publish_CopyFile">
            <summary>
              Looks up a localized string similar to Copying file..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Publish_ErrorAccessingOemFolder">
            <summary>
              Looks up a localized string similar to An error occurred accessing the specified $OEM$ folder..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Publish_Finished">
            <summary>
              Looks up a localized string similar to Configuration set created successfully..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Publish_FinishWithErrors">
            <summary>
              Looks up a localized string similar to Errors encountered while creating the configuration set..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Publish_InvalidSettingDefinitions">
            <summary>
              Looks up a localized string similar to There are settings in the answer file that are not present in the Windows image. The configuration set may not work properly..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Publish_NoOfflineImage">
            <summary>
              Looks up a localized string similar to The Windows Setup component cannot be added. The answer file is not associated with a Windows image. The configuration set will not work..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Publish_OemFolderDoesNotExist">
            <summary>
              Looks up a localized string similar to The specified $OEM$ folder does not exist..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Publish_WritingAnswerFile">
            <summary>
              Looks up a localized string similar to Writing new answer file..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PublishException_PathDoesNotExist">
            <summary>
              Looks up a localized string similar to The path {0} does not exist..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PublishException_PathTooLong">
            <summary>
              Looks up a localized string similar to The length of the path name is too long..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PublishException_TargetMustBeAFolder">
            <summary>
              Looks up a localized string similar to The target location must be a folder..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.PublishExcepton_FileAlreadyExists">
            <summary>
              Looks up a localized string similar to The file {0} already exists..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.RunOnceCommandAlreadyExist">
            <summary>
              Looks up a localized string similar to The synchronous command with key {0} already exists in the answer file..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ScalarTypeSettingCannotHaveOverrides">
            <summary>
              Looks up a localized string similar to This setting cannot have other component settings under it..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SettingCannotBeNull">
            <summary>
              Looks up a localized string similar to The setting cannot be null..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SettingIsReadOnly">
            <summary>
              Looks up a localized string similar to Setting cannot be modified..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SettingNotAList">
            <summary>
              Looks up a localized string similar to The setting {0} is not a list..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SettingNotFound">
            <summary>
              Looks up a localized string similar to The specified setting {0} does not exist. .
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SettingNotHaveOverride">
            <summary>
              Looks up a localized string similar to The setting has not been modified. It will not be saved to the answer file..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SettingOverrideExists">
            <summary>
              Looks up a localized string similar to The setting already exists in the answer file..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SettingOverrideMergedInAnswerFile">
            <summary>
              Looks up a localized string similar to Duplicate settings have been removed from your answer file: {0}: {1}.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SettingOverridesAreReadOnly">
            <summary>
              Looks up a localized string similar to Component settings cannot be modified in this context..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SettingValue_MustReboot_False">
            <summary>
              Looks up a localized string similar to false.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SettingValue_MustReboot_True">
            <summary>
              Looks up a localized string similar to true.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SettingValue_WillReboot_Always">
            <summary>
              Looks up a localized string similar to Always.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SettingValue_WillReboot_Never">
            <summary>
              Looks up a localized string similar to Never.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SettingValue_WillReboot_OnRequest">
            <summary>
              Looks up a localized string similar to OnRequest.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Setup_CommandLineSettingName">
            <summary>
              Looks up a localized string similar to Path.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Setup_Id_Name">
            <summary>
              Looks up a localized string similar to Microsoft-Windows-Setup.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Setup_MustRebootSettingName">
            <summary>
              Looks up a localized string similar to MustReboot.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Setup_PathToSynchronousCommandList">
            <summary>
              Looks up a localized string similar to RunSynchronous/RunSynchronousCommand.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Setup_SynchronousCommandType">
            <summary>
              Looks up a localized string similar to RunSynchronousCommandType.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Setup_UseConfigruationSetName">
            <summary>
              Looks up a localized string similar to UseConfigurationSet.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SetupComponentName">
            <summary>
              Looks up a localized string similar to Microsoft-Windows-Setup.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Shell_CommandLineSettingName">
            <summary>
              Looks up a localized string similar to CommandLine.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Shell_DescriptionSettingName">
            <summary>
              Looks up a localized string similar to Description.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Shell_Id_Name">
            <summary>
              Looks up a localized string similar to Microsoft-Windows-Shell-Setup.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Shell_OrderSettingName">
            <summary>
              Looks up a localized string similar to Order.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Shell_PathToSynchronousCommandList">
            <summary>
              Looks up a localized string similar to FirstLogonCommands/SynchronousCommand.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Shell_SynchronousCommandType">
            <summary>
              Looks up a localized string similar to CommandType.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SMI_CredentialsSettingName">
            <summary>
              Looks up a localized string similar to Credentials.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SMI_CredentialsTypeName">
            <summary>
              Looks up a localized string similar to CredentialsType.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SMI_DomainSettingName">
            <summary>
              Looks up a localized string similar to Domain.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SMI_PasswordSettingName">
            <summary>
              Looks up a localized string similar to Password.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SMI_UserNameSettingName">
            <summary>
              Looks up a localized string similar to Username.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SourcePathAlreadyExist">
            <summary>
              Looks up a localized string similar to The path {0} already exists..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.SourcePathAlreadyExists">
            <summary>
              Looks up a localized string similar to The SourcePath {0} already exists..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.UncompressedOfflineImageDirectoryCannotBeRoot">
            <summary>
              Looks up a localized string similar to A Windows image folder cannot be a root directory..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.UntitledAnswerFile">
            <summary>
              Looks up a localized string similar to Untitled.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_AddingExistingPackage">
            <summary>
              Looks up a localized string similar to Cannot install package {0}; it is already in the current Windows image..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_CannotUseConfigSetRoot">
            <summary>
              Looks up a localized string similar to This path references the %configsetroot% environment variable but the answer file does not appear to be part of a configuration set..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_ComponentSettingFormatInvalid">
            <summary>
              Looks up a localized string similar to The setting value {0} for component {1}, setting {2} is not formatted properly. Regular expression mismatch {3}.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_Fail">
            <summary>
              Looks up a localized string similar to Fail.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_InstallPackagePathMissing">
            <summary>
              Looks up a localized string similar to Package {0} does not specify a source path..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_InvalidKeyValue">
            <summary>
              Looks up a localized string similar to Line {0}: The key {1} is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_InvalidPathInConfigSet">
            <summary>
              Looks up a localized string similar to This path references a location outside of the configuration set.  It may not be accessible during setup..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_InvalidSettingOverrideAction">
            <summary>
              Looks up a localized string similar to Line {0}: setting action {1} is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_NoComponentsInPackage">
            <summary>
              Looks up a localized string similar to There are no configurable Windows features for the package..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_NoComponentsToConfigure">
            <summary>
              Looks up a localized string similar to Configure action specified for the package but no Windows features have been selected..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_PackageDoesNotContainComponent">
            <summary>
              Looks up a localized string similar to The package does not contain the Windows feature named {0}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_Pass">
            <summary>
              Looks up a localized string similar to Pass.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_PassWithWarning">
            <summary>
              Looks up a localized string similar to Pass with warnings.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_RemovingNonexistantPackage">
            <summary>
              Looks up a localized string similar to Cannot remove package {0}; it does not exist in the current Windows image..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_RemovingNonremovablePackage">
            <summary>
              Looks up a localized string similar to Package {0} cannot be removed from the Windows image..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_SettingDeprecated">
            <summary>
              Looks up a localized string similar to Setting {0} is deprecated in the Windows image.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_SettingHasValue">
            <summary>
              Looks up a localized string similar to Cannot create SettingOverride under a SettingOverride that has a value..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_UnknownSettingAttribute">
            <summary>
              Looks up a localized string similar to Line {0}: Unknown setting attribute {1}..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.Validate_WindowsFeatureDependenciesNotEnabled">
            <summary>
              Looks up a localized string similar to Windows Feature is enabled but one or more of its dependencies have not been enabled in the answer file..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.ValidOfflineImageUri">
            <summary>
              Looks up a localized string similar to {0} is a valid Windows image uniform resource identifier..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.WindowsFeatureSelectionAlreadyExist">
            <summary>
              Looks up a localized string similar to Selection for Windows feature {0} already exists..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.WindowsFoundationPackageName">
            <summary>
              Looks up a localized string similar to Microsoft-Windows-Foundation-Package.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.WinPEDMIComponentName">
            <summary>
              Looks up a localized string similar to Microsoft-Windows-PnpCustomizationsWinPE.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.XmlException_MissingElement">
            <summary>
              Looks up a localized string similar to The element {0} is missing..
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.MyResources.XMLStringNotAComponent">
            <summary>
              Looks up a localized string similar to The XML string is not for a component..
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.NativeMethods">
            <summary>
            Class for native win32 Methods
            </summary>
        </member>
        <member name="E:Microsoft.ComponentStudio.ComponentPlatformInterface.NativeMethods.CopyProgress">
            <summary>
            Event fired during CopyFile progress.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.NativeMethods.ErrorCode">
            <summary>
            Error codes returned from GetLastWin32Error().
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.NativeMethods.GetSSPath(System.String,System.String)">
            <summary>
            Get the unique path for the passed in path.
            </summary>
            <param name="path"></param>
            <param name="moduleName"></param>
            <returns>Full path for mounted wim</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.NativeMethods.ReleaseSSPath">
            <summary>
            Relase servicing stack path
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.NativeMethods.GetLocalUniversalPath(System.String)">
            <summary>
            Get the unique path for the passed in path.
            </summary>
            <param name="path"></param>
            <returns>Full path for local path not shared, UNC path if it is a net work share</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.NativeMethods.GetUniversalPath(System.String)">
            <summary>
            Get the unique path for the passed in path.
            </summary>
            <param name="path"></param>
            <returns>Full path for local path not shared, UNC path if it is a net work share</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.NativeMethods.GetFullPathName(System.String)">
            <summary>
            Resolves any relative path information in the string and returns the full physical path.
            </summary>
            <param name="pathName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.NativeMethods.CreateDirectory(System.String)">
            <summary>
            Creates the specified directory. Supports long pathnames using \\?\ syntax.
            </summary>
            <param name="pathName"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.NativeMethods.CopyFile(System.String,System.String,System.Boolean)">
            <summary>
            Copies a file. Supports long pathnames using \\?\ syntax. Supports callback for canceling in middle
            of file copy. Returns true if the copy operation completed successfully, false if it was aborted.
            </summary>
            <param name="existingFileName"></param>
            <param name="newFileName"></param>
            <param name="failIfExists"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.NativeMethods.DeleteFile(System.String)">
            <summary>
            Deletes the file specified. Does not error if the file did not exist.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.NativeMethods.DeleteDirectory(System.String)">
            <summary>
            Recursively deletes the contents of specified directory. Supports long pathnames using \\?\ syntax.
            This calls the DOS command "rd" to execute the function.
            </summary>
            <param name="dir"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.NativeMethods.IsFolder(System.String)">
            <summary>
            Returns true if the specified path is a folder. Returns false if it is not a folder or does not
            exist. (Can be used instead of .NET Directory.Exist() call)
            </summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.NativeMethods.PrependLongPathSyntax(System.String)">
            <summary>
            Returns a string with the \\?\ syntax prefixed to the front.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.NativeMethods.GetLongPathSyntax(System.String)">
            <summary>
            Determines the proper \\?\ syntax for the specified path.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.NativeMethods.CopyProgressReturnCode">
            <summary>
            Return codes for CopyProgressRoutine
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.NativeMethods.CopyProgressRoutine(System.Int64,System.Int64,System.Int64,System.Int64,System.Int32,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Callback routine for CopyFileEx native call.
            </summary>
            <param name="totalFileSize"></param>
            <param name="totalBytesTransferred"></param>
            <param name="streamSize"></param>
            <param name="streamBytesTransferred"></param>
            <param name="dwStreamNumber"></param>
            <param name="dwCallbackReason"></param>
            <param name="hSourceFile"></param>
            <param name="hDestinationFile"></param>
            <param name="lpData"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage">
            <summary>
            Describes an offline Windows image.
            </summary>
            <remarks>
            An offline image is a Windows image that is not currently running.  
            Typically, you can access an offline image to expose the components, 
            settings, and packages available in that Windows image.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage.Name">
            <summary>
            Retrieves the name of the Windows image.
            </summary>
            <value>
            The name of the Windows image.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage.GetImageInfo">
            <summary>
            Retrieves an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo"/>
            that describes the offline image.
            </summary>
            <returns>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo"/>
            that describes the offline image.        
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage.GetId(Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage)">
            <summary>
            Retrieves a unique identifier of an offline image.
            </summary>
            <param name="image">Specifies the offline image.
            </param>
            <returns>
            A string that identifies the image.
            </returns>
            <remarks>The returned identifier can be used to determine whether two instances of
            <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage"/>
            actually points to the same physical offline image.</remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage.FindComponentIdentity(System.String)">
            <summary>
            Retrieves the full identity of a language-neutral Windows component based on the component name.
            </summary>
            <param name="name">Name of component to be searched for.</param>
            <returns>The full identity of the Windows component if a component that matches the <paramref name="name"/> 
            and whose language is "neutral" is found. <c>null</c> otherwise.</returns>
            <remarks>
            <para>
            If there're multiple identities found, the method will return the one with the most
            recent version. 
            </para>
            <para>
            This method only searches components that are part of Windows operating system.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage.FindComponentIdentity(System.String,System.String)">
            <summary>
            Retrieves the full identity of a Windows component based on the component name and the component language.
            </summary>
            <param name="name">Name of component to be searched for.</param>
            <param name="language">The language of the component.</param>
            <returns>The full identity of the Windows component if a component that matches the <paramref name="name"/> 
            is found. <c>null</c> otherwise.</returns>
            <remarks>
            <para>
            If there're multiple identities found, the method will return the one with the most
            recent version. 
            </para>
            <para>
            This method only searches components that are part of Windows operating system.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage.FindPackageIdentity(System.String)">
            <summary>
            Retrieves the package identity based on the package name.
            </summary>
            <param name="name">Name of package to be searched for.</param>
            <returns>The full identity of the Windows package if a package that matches the <paramref name="name"/> 
            and whose language is "neutral" is found. <c>null</c> otherwise.</returns>
            <remarks>
            <para>
            If there're multiple identities found, the method will return the one with the most
            recent version. 
            </para>
            <para>
            This method only searches packages that are part of Windows operating system.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage.FindPackageIdentity(System.String,System.String)">
            <summary>
            Retrieves the package identity based on the package name and language.
            </summary>
            <param name="name">Name of package to be searched for.</param>
            <param name="language">The language of the package.</param>
            <returns>The full identity of the Windows package if a package that matches the <paramref name="name"/> 
            is found. <c>null</c> otherwise.</returns>
            <remarks>
            <para>
            If there're multiple identities found, the method will return the one with the most
            recent version. 
            </para>
            <para>
            This method only searches packages that are part of Windows operating system.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage.FindAllComponentIdentities(System.String)">
            <summary>
            Returns a collection of all identities in the image that match the name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage.ComponentSettings">
            <summary>
            Retrieves all components that expose override-able settings.
            </summary>
            <value>
            A read-only collection that contains all components that expose override-able settings.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage.Packages">
            <summary>
            Retrieves all packages in an offline Windows image.
            </summary>
            <value>
            A read-only collection that contains all packages in an offline Windows image.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage.WindowsFoundationPackageId">
            <summary>
            Retrieves the full identity of Windows foundation package.
            </summary>
            <value>
            The full identity of Windows foundation package.
            </value>
            <remarks>
            All Windows features are defined in the Windows foundation package. 
            To enable or disable a Windows feature, you will need to create a 
            <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction"/> to 
            configure the Windows foundation package in answer file, then modify the
            <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ImageWindowsFeatureSelection.Enabled"/>
            property of the individual Windows feature exposed by <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.WindowsFeatureSelections"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage.WindowsFoundationPackageName">
            <summary>
            Gets the name of the Windows Foundation Package
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageCatalog">
            <summary>
            Represents an image catalog file.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageCatalog.Serialize(Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo)">
            <summary>
            Create a catalog file.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageCatalog.Deserialize(Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo,Microsoft.ComponentStudio.ComponentPlatformInterface.SimpleCpiResult@)">
            <summary>
            Deserialize a catalog file.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateCatalogProgressChangedEventArgs">
            <summary>
            Represents the event arguments used in the <see cref="E:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.CatalogProgressUpdate"/> event.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateCatalogProgressChangedEventArgs.Progress">
            <summary>
            Retrieves the percentage that has been completed in the catalog generation process.
            </summary>
            <value>
            The percentage that has been completed in the catalog generation process.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateCatalogProgressChangedEventArgs.Description">
            <summary>
            Retrieves the description of the ongoing catalog generation process.
            </summary>
            <value>
            The description of the ongoing catalog generation process.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateCatalogProgressChangedEventArgs.Cancel">
            <summary>
            Retrieves or sets a value indicating whether user has canceled the catalog generation process.
            </summary>
            <value>
            <c>true</c> if the catalog generation is canceled. <c>false</c> otherwise.
            </value>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.IPhysicalOfflineImage">
            <summary>
            Represents a physical offline image (instead of a logical one such as a catalog file). A physical image has a root directory
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.CatalogCreatorEventSink.CatalogProgress(System.Object,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateCatalogProgressChangedEventArgs)">
            <summary>
            This method has concrete implementation on the server,
            so it can be safely called.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">Argument of the event.</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.CatalogCreatorEventSink.InternalCatalogProgress(System.Object,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateCatalogProgressChangedEventArgs)">
            <summary>
            Real work is done in this method
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">Argument of the event.</param>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo">
            <summary>
            Describes some basic information about an offline image without actually opens it.
            </summary>
            <remarks>
            <para>
            There are a lot of overheads to open an offline Windows image (that is, to obtain an
            instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage"/>).
            For example, opening the image requires that catalog file that matches the image to be present,
            and will need to read in the complete catalog file.
            </para>
            <para>
            This class provides ways to quickly examine the basic information about an offline image
            without incurring the overheads. It also provides methods to validate and generate catalog file
            of the image.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.ImageType">
            <summary>
            Specified the original format of an offline image.    
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.ImageType.Unknown">
            <summary>
            Unable to determine the source of the offline image.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.ImageType.Folder">
            <summary>
            The offline image is specified by a folder.    
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.ImageType.Wim">
            <summary>
            The offline image is inside a Windows Image(.wim) file.    
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.ImageType.Catalog">
            <summary>
            The offline image is specified by a catalog file.    
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.Parse(System.String)">
            <summary>
            Parse a string and returns an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo"/>
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.SourcePath">
            <summary>
            Retrieves the source path of the offline Windows image.
            </summary>
            <value>
            The source path of the offline Windows image.
            </value>
            <remarks>
            <para>
            If the offline Windows image is specified by a folder(<see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.Type"/>
            is <see cref="F:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.ImageType.Folder"/>), returns the root
            of the folder.
            </para>
            <para>
            If the offline Windows image is specified by a catalog(<see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.Type"/>
            is <see cref="F:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.ImageType.Catalog"/>), returns the path
            of the catalog file.
            </para>
            <para>
            If the offline Windows image is inside a wim file(<see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.Type"/>
            is <see cref="F:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.ImageType.Wim"/>), returns the path
            of the wim file.
            </para>
            If the source path is an uncompressed image, it returns the path of the uncompressed folder. 
            If it's a WIM file, it returns the path of the WIM file.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.LastModifiedTime">
            <summary>
            Timestamp the image is last modified
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.CatalogPath">
            <summary>
            Retrieves the full path of the catalog file.
            </summary>
            <value>
            The full path of the catalog file.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.CatalogExtension">
            <summary>
            Retrieves the extension of the catalog file.
            </summary>
            <value>
            The extension of the catalog file. The default is ".clg".
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.Type">
            <summary>
            Describes the type of the offline image.    
            </summary>
            <value>
            A value of type <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.ImageType"/>
            that specifies the type of the offline image.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.ValidateImage">
            <summary>
            Verifies that the offline image specified by this <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo"/> instance is valid.
            </summary>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SimpleCpiResult"/> that describes the validation result.</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.ValidateCatalog">
            <summary>
            Verifies that the catalog file matches the associated offline Windows image.
            </summary>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SimpleCpiResult"/> that describes the validation result.</returns>
        </member>
        <member name="E:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.CatalogProgressUpdate">
            <summary>
            An event that reports the progress of catalog generation.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.FireCatalogProgressEvent(System.Int32,System.String)">
            <summary>
            Fires the CreateConfigurationSetProgressChanged event. If user cancels the action, method returns false.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.CreateCatalog">
            <summary>
            Creates a catalog for the image represented by this <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo"/> instance.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the current user is not an administrator of the local machine.</exception>
            <remarks>You must be logged on as an administrator of the local machine to call this method. On Windows Vista,
            the process that invokes this method must also be run at elevated privilege.</remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.ImageName">
            <summary>
            Retrieves the name of the offline Windows image.
            </summary>
            <value>
            The name of the offline Windows image.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.WindowsDirectoryName">
            <summary>
            Retrieves the name of the Windows directory of the offline image.
            </summary>
            <value>
            The name of the Windows directory of the offline image. The default is "Windows".
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.WindowsSystemDirectoryName">
            <summary>
            Retrieves the name of the Windows system directory of the offline image.
            </summary>
            <value>
            The name of the Windows system directory of the offline image. The default is "System32".
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.ImageId">
            <summary>
            A string used to identify an image.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.ToString">
            <summary>
            Retrieves the string that identifies the offline Windows image. 
            </summary>
            <returns>
            A string that identifies the offline Windows image.
            </returns>
            <remarks>
            The returned string can be passed to <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.OpenOfflineImage(System.String)"/>
            or <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.GetOfflineImageInfo(System.String)"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.ImageUri">
            <summary>
            This is used to prevent creating multiple instances of same physical image
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.PreCreateCatalog">
            <summary>
            Allows derived class to perform preparations before catalog is generated. This is called by <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.CreateCatalog"/>
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.PostCreateCatalog">
            <summary>
            Allows derived class to perform cleanup after catalog is generated. This is called by <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.CreateCatalog"/>
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.UncompressedOfflineImageInfo">
            <summary>
            Describes an uncompressed offline image.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.UncompressedOfflineImageInfo.#ctor(System.String)">
            <summary>
            Construct an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.UncompressedOfflineImageInfo"/>.
            </summary>
            <param name="path">The path of the uncompressed offline image.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the <code>path</code> parameter is null.</exception>
            <exception cref="T:System.FormatException">Thrown if the directory represented by <code>uri</code> parameter is a root directory.</exception>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.UncompressedOfflineImageInfo.SourcePath">
            <summary>
            The path of the root folder of the uncompressed image.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.UncompressedOfflineImageInfo.LastModifiedTime">
            <summary>
            The timestamp when the image is last modified.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.UncompressedOfflineImageInfo.CatalogPath">
            <summary>
            The path of the catalog file.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.UncompressedOfflineImageInfo.ImageName">
            <summary>
            The name of the image.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.UncompressedOfflineImageInfo.ImageRoot">
            <summary>
            The root directory of the image.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.UncompressedOfflineImageInfo.ValidateImage">
            <summary>
            Verified the offline image is a valid Windows image.
            </summary>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SimpleCpiResult"/> that described the validation result.</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.UncompressedOfflineImageInfo.PreCreateCatalog">
            <summary>
            Derived from <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.PreCreateCatalog"/>
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.UncompressedOfflineImageInfo.PostCreateCatalog">
            <summary>
            Derived from <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo.PostCreateCatalog"/>
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.WimImageInfo">
            <summary>
            Describes an image inside a WIM file.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.WimImageInfo.ValidateImage">
            <summary>
            Verifies the offline image is valid.
            </summary>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SimpleCpiResult"/> describing the validation result.</returns>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.WimImageInfo.SourcePath">
            <summary>
            The path of the WIM file.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.WimImageInfo.LastModifiedTime">
            <summary>
            The timestamp the image is last modified.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.WimImageInfo.CatalogPath">
            <summary>
            The full path of the catalog file
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.WimImageInfo.ImageName">
            <summary>
            The name of image
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.WimImageInfo.ImageRoot">
            <summary>
            The root directory of offline image.
            </summary>
            <remarks>
            This is the directory where the image will be mounted before catalog is generated.
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.WimImageInfo.ToString">
            <summary>
            The string representation of the image. See <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Cpi.GetOfflineImageInfo(System.String)"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.WimImageInfo.PreCreateCatalog">
            <summary>
            Mount the image before catalog is generated.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.WimImageInfo.PostCreateCatalog">
            <summary>
            Unmount the image after catalog is generated.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ImageWindowsFeatureSelection">
            <summary>
            Describes the Windows feature selections in a Windows package.
            </summary>
            <remarks>
            <para>
            All Windows features are defined in a single package - the Windows Foundation Package.
            The identity of the Windows FoundationPackage can be retrieved by calling <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage.WindowsFoundationPackageId"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ImageWindowsFeatureSelection.Name">
            <summary>
            Retrieves the name of the Windows feature.
            </summary>
            <value>
            The name of the Windows feature.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ImageWindowsFeatureSelection.DisplayName">
            <summary>
            Retrieves the display name of the Windows feature.
            </summary>
            <value>
            The display name of the Windows feature.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ImageWindowsFeatureSelection.Enabled">
            <summary>
            Retrieves the installation status of the Windows feature.
            </summary>
            <value>
            <c>true</c> if the Windows feature is already installed in the offline image. <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ImageWindowsFeatureSelection.ContainingPackage">
            <summary>
            Retrieves the instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Package"/> 
            that contains this Windows feature.
            </summary>
            <value>
            The instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Package"/> 
            that contains this Windows feature.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ImageWindowsFeatureSelection.ParentFeatureSelections">
            <summary>
            Retrieves all Windows features that this Windows feature depends on.
            </summary>
            <value>
            A read-only collection of all Windows features that this Windows feature depends on. 
            The collection will be empty if this Windows feature does not depend on any other Windows features.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ImageWindowsFeatureSelection.InternalParentFeatureSelections">
            <summary>
            Internal parent feature collection to allow the Package class to construct the dependency graph
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ImageWindowsFeatureSelection.ChildFeatureSelections">
            <summary>
            Retrieves all Windows features that depend on this Windows feature.
            </summary>
            <value>
            A read-only collection of all Windows features that depend on this Windows feature. 
            The collection will be empty if there's no other Windows feature depends on this one.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ImageWindowsFeatureSelection.InternalChildFeatureSelections">
            <summary>
            Internal parent feature collection to allow the Package class to construct the dependency graph
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.EnableDisableListBox">
            <summary>
            Classes that provide custom editor that emulate combo box containing two string
            Enabled and Disabled. We use it to edit the state of WindowsFeatureSelection.
            We can't use built-in support (using TypeConverter) because when users change
            value using the built-in combo box, PropertyGrid in correctly refresh display of the
            expanded child feature selections (it refresh only immediate child, if some of
            immediate children are also expanded, they will be overridden)
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.EnableDisableTextEditor">
            <summary>
            This editor class can only be applied to property of type string
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.WindowsFeatureSelectionTypeConverter">
            <summary>
            This class tells PropertyGrid to show + sign to allow users to expand a imageFeatureSelection
            based on number of items in ChildFeatureSelections
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.WindowsFeatureSelectionPropertyDescriptor.GetAnswerFileFeatureSelection">
            <summary>
            need to dynamically get answer file selection from the package action because
            users create/remove them during the edit session, we want all property descriptors
            representing the same feature to get updated value
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType">
            <summary>
            Defines the type of a package.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.Product">
            <summary>
            A software product.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.Connector">
            <summary>
            A software component designed to support connections between products.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.CriticalUpdate">
            <summary>
            A broadly released fix for a specific problem addressing a critical, non-security-related bug.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.DevelopmentKit">
            <summary>
            Software that helps in the writing of new programs such as applications or drivers. 
            A development kit can include a visual builder, an editor, and a compiler.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.Driver">
            <summary>
            A software component necessary to control or regulate another device.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.FeaturePack">
            <summary>
            A new product functionality that is first distributed outside the context of a 
            product release, and usually included in the next full product release.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.Foundation">
            <summary>
            The foundation package that contains common Windows features.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.Guidance">
            <summary>
            Scripts, sample code, and technical recommendations designed to 
            help in the deployment and use of a product or technology.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.HotFix">
            <summary>
            A single cumulative package composed of one or more files used to address a problem in a product. 
            Hotfixes address a specific customer situation and may not be distributed outside that customer's 
            organization.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.SecurityUpdate">
            <summary>
            A broadly released fix for a product-specific, security-related issue. Security issues are rated 
            based on their severity, which is indicated in the Microsoft security bulletin  as critical, 
            important, moderate or low.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.ServicePack">
            <summary>
            A tested, cumulative set of all hotfixes, security updates, critical updates, as well as 
            additional fixes for problems found internally since the release of the product. Service 
            packs can also contain a limited number of customer-requested design changes or features.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.SoftwareUpdate">
            <summary>
            Any update, update rollup, service pack, feature pack, critical update, security update, 
            or hotfix used to improve or fix a software product released by Microsoft Corporation.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.Tool">
            <summary>
            A utility or feature that helps to accomplish a task or set of tasks.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.Update">
            <summary>
            A broadly released fix for a specific problem addressing a noncritical 
            or non-security-related bug.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.UpdateRollup">
            <summary>
            A tested, cumulative set of hotfixes, security updates, critical updates and updates 
            packaged together for easy deployment. A rollup generally targets a specific area, 
            such as security, or a component of a product, such as Internet Information Services (IIS).
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.LanguagePack">
            <summary>
            A language pack.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.LocalPack">
            <summary>
            A local pack.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.OnDemandPack">
            <summary>
            A Features-on-Demand v2 package
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.BuildUpdate">
            <summary>
            An upgrade-via-servicing build update package
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageReleaseType.Unknown">
            <summary>
            Unable to determine the package release type.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Package">
            <summary>
            Represents a software package.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.#ctor">
            <summary>
            Provide a way to child implementation to create Package object
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity)">
            <summary>
            Create an unloaded package (uses know id if the package to configured or removed)
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.Id">
            <summary>
            Retrieves the identity of the package.
            </summary>
            <value>
            The identity of the package.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.IsMissing">
            <summary>
            Checks whether the package file is missing.
            </summary>
            <value>
            <c>true</c> if the package file is missing; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.Path">
            <summary>
            Retrieves the path of the package file.
            </summary>
            <value>
            The path of the package file. <c>null</c> if <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.IsMissing"/>
            is <c>true</c> or the package is retrieved from an offline Windows image.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.Parent">
            <summary>
            Retrieves the offline image containing the package.
            </summary>
            <value>
            The instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage"/>
            that specifies the offline Windows image that the package was retrieved. <c>null</c> if
            this instance is not retrieved from an offline Windows image.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.ReleaseType">
            <summary>
            Retrieves the release type of the package.
            </summary>
            <value>
            The release type of the package.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.DisplayName">
            <summary>
            Retrieves the display name of the package.
            </summary>
            <value>
            The display name of the package.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.Description">
            <summary>
            Retrieves the description of the package.
            </summary>
            <value>
            The description of the package.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.CompanyName">
            <summary>
            Retrieves the name of the company creating the package.
            </summary>
            <value>
            The name of the company creating the package.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.ProductName">
            <summary>
            Retrieves the product name.
            </summary>
            <value>
            The product name.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.ProductVersion">
            <summary>
            Retrieves the product version.
            </summary>
            <value>
            The product version.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.Copyright">
            <summary>
            Retrieves the copyright disclaimer of the package.
            </summary>
            <value>
            The copyright disclaimer of the package.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.SupportInformation">
            <summary>
            Retrieves the support information of the package.
            </summary>
            <value>
            The support information of the package.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.IsRemovable">
            <summary>
            Checks whether the package is removable from the offline Windows image.
            </summary>
            <value>
            <c>true</c> if the package file is removable from the offline Windows image; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.Keyword">
            <summary>
            Retrieves the keyword of the package.
            </summary>
            <value>
            The keyword of the package.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.FindFeatureSelection(System.String)">
            <summary>
            Search for <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ImageWindowsFeatureSelection"> with the specified name</see>
            </summary>
            <param name="featureName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.GetAllPathsToRoot(System.String)">
            <summary>
            Walks from the specified update to the top level dependency and generates all possible paths to
            the root. Feature names are delimited in the string path with the forward slash '/' character.
            </summary>
            <param name="featureName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.WalkUpGraph(System.Collections.Generic.List{Microsoft.ComponentStudio.ComponentPlatformInterface.Package.FeaturesInAPathToRoot},Microsoft.ComponentStudio.ComponentPlatformInterface.Package.FeaturesInAPathToRoot)">
            <summary>
            Recursively walks up the feature hierarchy building a list of paths as it goes.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.WindowsFeatureSelections">
            <summary>
            Retrieves the top level Windows feature selections of the package.
            </summary>
            <value>
            The top level Windows feature selections of the package.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.TranslateReleaseTypeString(System.String)">
            <summary>
            Translate CBS releasetype string enum to PackageReleaseType
            </summary>
            <param name="releaseType">string release type</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.Load">
            <summary>
            Reloads the package from a package file.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.ToString">
            <summary>
            return display name of this package
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.Package.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>
            Change the category name of the ComponentSetting properties
            and also make top level scalar definitions displayed as properties in a separate category 
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageCollection">
            <summary>
            Concrete class for package collection
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.FilePackage">
            <summary>
            Represent a software package.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.FilePackage.#ctor(System.String)">
            <summary>
            Create an package object and load content from a package folder or cab file
            </summary>
            <param name="pathToFolderOrcabinetFile"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.FilePackage.Load">
            <summary>
            Reload the package from a package file
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageActionType">
            <summary>
            Defines the installation action that can be performed on a package during unattended Windows setup.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageActionType.Install">
            <summary>
            Installs and/or configures the package.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageActionType.Configure">
            <summary>
            Configures an installed package.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageActionType.Remove">
            <summary>
            Removes an installed package.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageActionType.Stage">
            <summary>
            Makes a package ready for installation.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PermanenceType">
            <summary>
            Describes the permanence of a package.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PermanenceType.Removable">
            <summary>
            Marks the installation of the package as removable.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PermanenceType.Permanent">
            <summary>
            Marks the installation of the package as non-removable.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PermanenceType.Temporary">
            <summary>
            Removes the package after the package is installed or updated.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction">
            <summary>
            Represents a package action entry in the answer file. 
            </summary>
            <remarks>
            <para>
            Instances of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction"/>
            can be created by calling one of the Create methods in <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageActionCollection"/>.
            </para>
            <para>
            A package action is created for a package in a Windows image or from a package file.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.Package,Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile)">
            <summary>
            Ctor for end users to create a PackageAction for a package in an image or from a package file
            </summary>
            <param name="package"></param>
            <param name="parent"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity,Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile)">
            <summary>
            Ctor for end users to create a PackageAction if they know the Package Id
            </summary>
            <param name="id"></param>
            <param name="parent"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.Node,Microsoft.ComponentStudio.ComponentPlatformInterface.Identity,Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile)">
            <summary>
            Ctor for end users to create a PackageAction given Package Node
            </summary>
            <param name="packageNode"></param>
            <param name="id"></param>
            <param name="parent"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.ChangeImage(Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImage)">
            <summary>
            Use the specified image for this package action
            </summary>
            <param name="image">the image to use</param>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.AnswerFile">
            <summary>
            Retrieves the <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile"/> 
            object from which the package action is obtained.
            </summary>
            <value>
            The <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile"/> 
            object from which the package action is obtained.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.Package">
            <summary>
            Retrieves the package associated with the action.
            </summary>
            <value>
            The package associated with the action.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.Action">
            <summary>
            Retrieves or sets the action to be performed on the package during unattended Windows setup.
            </summary>
            <value>
            The action to be performed on the package during unattended Windows setup.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.PermanenceType">
            <summary>
            Retrieves or sets the permanence type of the action.
            </summary>
            <value>
            The permanence type of the action.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.PackageActionNode">
            <summary>
            Gets the package node action
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.PrimarySourcePath">
            <summary>
            Retrieves or sets the primary source path (the first item in the 
            <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.SourcePaths"/> collection)
            </summary>
            <value>
            The primary source path.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.SourcePaths">
            <summary>
            Retrieves all source paths of the package.
            </summary>
            <value>
            A read only collection that lists all source paths of the package.
            </value>
            <remarks>
            <para>
            There can be more than one path associated with a package. The first one in the collection will be used
            during unattended installation. The ones with <see cref="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PermanenceType.Temporary"/> will be removed after the installation.
            </para>
            <para>
            One scenario that multiple source paths can be used is that you may put the same package on a local
            drive (such as when you create a configuration set), as well as on a network share. The one on the
            local path is a temporary one and will be used by setup. The one on the network share can be used later
            for repairing purpose.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.WindowsFeatureSelections">
            <summary>
            Retrieves the Windows feature selections in the 
            <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction"/> object.
            </summary>
            <value>
            The Windows feature selections in the 
            <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction"/> object.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.AreFeaturesInPathEnabled(System.String)">
            <summary>
            Returns true is all features in the path are enabled
            </summary>
            <param name="featurePath">path containing Windows Feature names delimited with '/'</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.EnableAllFeaturesInPath(System.String)">
            <summary>
            Add selection to enable all features in a feature Path
            </summary>
            <param name="featurePath">featurePath containing Windows Feature names delimited with '/'</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.Remove">
            <summary>
            Removes the package action from answer file.
            </summary>
            <remarks>
            You should not continue to use this object after this method is called.
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.ToString">
            <summary>
            Returns the display name of the package action.
            </summary>
            <returns>
            The display name of the package action.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>
            Change the category name of the ComponentSetting properties
            and also make top level scalar definitions displayed as properties in a separate category 
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageActionCollection">
            <summary>
            Represents all package actions that have been added to an answer file.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageActionCollection.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile)">
            <summary>
            Construct an instance of <c>PackageActionCollection</c>"/>
            </summary>
            <param name="answerFile">The AnswerFile object this package action collection belongs to.</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageActionCollection.Create(Microsoft.ComponentStudio.ComponentPlatformInterface.Package,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions)">
            <summary>
            Creates an installation action that needs to be performed on a package during unattended Windows setup 
            and adds it to the answer file.
            </summary>
            <param name="package">
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.Package"/> that specifies the package.
            </param>
            <param name="createOption">
            The enumeration element that determines whether to return the existing 
            package action or throw an exception when one already exists.
            </param>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="package"/> is <c>null</c>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if there is already a package action for the package
            specified by <paramref name="package"/> in the answer file, and <paramref name="createOption"/>
            is <see cref="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions.FailIfExists"/>.</exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageActionCollection.Create(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions)">
            <summary>
            Creates an installation action that needs to be performed on a package during unattended Windows setup
            and adds it to the answer file.
            </summary>
            <param name="id">
            The identity of the package.
            </param>
            <param name="createOption">
            The enumeration element that determines whether to return the existing 
            package action or throw an exception when one already exists.
            </param>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="id"/> is <c>null</c>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if there is already a package action for the package
            specified by <paramref name="id"/> in the answer file, and <paramref name="createOption"/>
            is <see cref="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions.FailIfExists"/>.</exception>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandRebootRequest">
            <summary>
            Specifies the reboot request of a run once command.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandRebootRequest.None">
            <summary>
            No reboot is needed during the OS installation.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandRebootRequest.MustRebootInWindowsPE">
            <summary>
            Deprecated. Rebooting in WindowPE is not supported.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandRebootRequest.Always">
            <summary>
            Reboot immediately after the current command is finished.
            The remaining commands will be executed after the machine reboots.
            This value can only be used in specialize and auditUser Pass. 
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandRebootRequest.OnRequest">
            <summary>
            Reboot behavior depends on the return value from the synchronous command.
            Please refer to the WillReboot section of Unattended Windows Setup Reference documentation for more details.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand">
            <summary>
            Encapsulates answer file actions required for Windows setup to execute certain commands synchronously.
            </summary>
            <remarks>
            <para>
            You can let Windows setup to execute a list of commands to install third party applications. You can use this class
            to add the commands to an answer file.
            </para>
            
            <para>
            You can use <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandCollection.Create(System.Int32,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions)"/>
            to add the commands to an answer file. You can use 
            <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.GetRunOnceCommands(Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)"/>
            to get the instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandCollection"/>
            from the answer file.
            </para>
            </remarks>
            <seealso cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandCollection"/>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile.GetRunOnceCommands(Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)"/>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandCollection.Create(System.Int32,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions)"/>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride)">
            <summary>
            Don't call directly. Please use AnswerFileSettingOverride.Factory to create an instance of this class.
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride,Microsoft.ComponentStudio.ComponentPlatformInterface.Node,System.Boolean)">
            <summary>
            Don't call directly. Please use AnswerFileSettingOverride.Factory to create an instance of this class.
            </summary>
            <param name="parent"></param>
            <param name="xmlNode"></param>
            <param name="ignoreDefinition"></param>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.Order">
            <summary>
            Retrieves the execution order of the command.
            </summary>
            <value>
            The execution order of the command.
            </value>
            <exception cref="T:System.ArgumentException">Thrown if a synchronous command with the same order already exists in the same configuration pass.</exception>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.KeyName">
            <summary>
            Gets the list key name for synchronous commands.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.GetSettingPath(Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)">
            <summary>
            Retrieves the path of the root setting that can be overridden to add synchronous 
            commands in the specified configuration pass.
            </summary>
            <param name="pass">The configuration pass that the settings will be applied to.</param>
            <returns>
            The path of the root setting that can be overridden to add synchronous 
            commands in the specified configuration pass.
            </returns>
            <remarks>
            Like <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath"/> class,
            the <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand"/> is another
            wrapper that encapsulates most of the detailed settings that need to be overridden 
            for a common task. Use of the wrapper classes are recommended. However there may be cases that 
            working with <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride"/>
            directly will be needed. See <see cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DriverPath.GetSettingPath(Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.GetCommandLineSettingName(Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)">
            <summary>
            Gets the element name for the command line element.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.ShellComponentName">
            <summary>
            Gets the name of the component containing the synchronous commands list for the oobeSystem pass.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.SetupComponentName">
            <summary>
            Gets the name of the component containing the synchronous commands list for the WinPE pass.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.DeploymentComponentName">
            <summary>
            Gets the name of the component containing the synchronous commands list for the auditSystem and specialize pass.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.ConfigurationPasses">
            <summary>
            Retrieves all applicable configuration passes for synchronous commands.
            </summary>
            <value>
            All applicable configuration passes for synchronous commands.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.GetApplicableConfigurationPasses(System.String)">
            <summary>
            Retrieves the applicable configuration passes for synchronous command based on a component name.
            </summary>
            <param name="commandComponentName">The component name that can have synchronous command.</param>
            <returns>
            The applicable configuration passes for synchronous command.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.GetApplicableComponentName(Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)">
            <summary>
            Retrieves the applicable component name for a specified configuration pass.
            </summary>
            <param name="pass">The configuration pass.</param>
            <returns>
            The applicable component name for the specified pass.
            </returns>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.CommandLine">
            <summary>
            Retrieves or sets the command-line to be executed.
            </summary>
            <value>
            The command-line string.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.Description">
            <summary>
            Retrieves or sets the description of the command.
            </summary>
            <value>
            The command description.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.RebootRequest">
            <summary>
            Retrieves or sets whether and how reboot will be performed after the command completed.
            </summary>
            <value>
            If no reboot request has been set, then this property will return <c>null</c>. Otherwise, it will
            return one of the values defined in <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandRebootRequest"/>
            </value>
            <exception cref="T:System.ArgumentException">Thrown if the specified value is not compatible with the configuration pass that
            the run once command is applied to. (see <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandRebootRequest"/> for details)</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the setting does not exist. (see <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandRebootRequest"/> for details)</exception>
            <seealso cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandRebootRequest"/>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.Domain">
            <summary>
            Retrieves or sets the domain name used to access the main executable of the command
            if it's placed on a remote machine.
            </summary>
            <value>
            The domain name used to access the main executable of the command
            if it's placed on a remote machine.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.UserName">
            <summary>
            Retrieves or sets the user name used to access the main executable of the command
            if it's placed on a remote machine.
            </summary>
            <value>
            The user name used to access the main executable of the command
            if it's placed on a remote machine.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand.Password">
            <summary>
            Retrieves or sets the password used to access the main executable of the command
            if it's placed on a remote machine.
            </summary>
            <value>
            The password used to access the main executable of the command
            if it's placed on a remote machine.
            </value>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandCollection">
            <summary>
            Represents collection of synchronous command.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandCollection.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFile,Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)">
            <summary>
            Construct an instance of <c>RunOnceCommandCollection</c>"/>
            </summary>
            <param name="answerFile">The AnswerFile object this RunOnce Command collection belongs to.</param>
            <param name="configurationPass">The ConfigurationPass this collection applies to.</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandCollection.Create(System.Int32,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions)">
            <summary>
            Creates or retrieves a synchronous command.
            </summary>
            <param name="order">the execution order of the command comparing to other commands in the collection.</param>
            <param name="createOption">The enumeration element that determines whether to return the existing selection or throw an exception when one already exists.</param>
            <returns>A <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommand"/></returns>
            <exception cref="T:System.InvalidOperationException">Thrown if there is already a runonce command for specified <paramref name="order"/> and createOption equals to CreateOptions.FailIfExists.</exception>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandCollection.Item(System.Int32)">
            <summary>
            Retrieves the command at a specific execution order.
            </summary>
            <param name="order">The execution order of the command to be retrieved.</param>
            <returns>The command at the specific execution order.</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandCollection.Contains(System.Int32)">
            <summary>
            Checks whether the collection contains a command at a specific execution order.
            </summary>
            <param name="order">The execution order of the command in question.</param>
            <returns><c>true</c> if the collection contains an item at the execution <paramref name="order"/>,
            <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandCollection.Count">
            <summary>
            Retrieves the number of items in the collection.
            </summary>
            <value>
            The number of items in the collection.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.RunOnceCommandCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator to allow iterating through the collection.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SerializerUtilities.EscapeSettingValue(System.String)">
            <summary>
            Escape user visible input value to what we use in XML file
            </summary>
            <param name="value">the input string value</param>
            <returns>the escaped string</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SerializerUtilities.UnEscapeSettingValue(System.String)">
            <summary>
            unescape the string in XML to the string value user uses
            </summary>
            <param name="escapedString">The escaped string in XML</param>
            <returns>the unescaped string value user uses</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SerializerUtilities.EscapeStringArraySettingValue(System.Collections.Generic.IList{System.String})">
            <summary>
            Escape user visible input string array value to what we use in XML file
            </summary>
            <param name="value">the input string array value</param>
            <returns>the escaped string</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SerializerUtilities.UnEscapeStringArraySettingValue(System.String)">
            <summary>
            Unescape the string in XML to the string array value user uses.
            </summary>
            <param name="value">The escaped string in XML</param>
            <returns>The unescaped string array value user uses.</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SerializerUtilities.EscapeForXMLNode(System.String)">
            <summary>
            Replace &amp; with &amp;amp; to avoid XML changing our string
            Note: There is no need to unescape it, as XML will unescape it for us when we read it in from file
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SerializerUtilities.UnEscapeFromXMLNode(System.String)">
            <summary>
            Replace &amp;amp; with &amp; to get back the real XML string
            Note: There is no need to unescape when reading from file, as XML reader will unescape it for us
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SerializerUtilities.EscapeFileForRead(System.String,System.String)">
            <summary>
            Encode &amp; to &amp;amp; for all strings in answer file and write to a temp file.
            Notes: all &amp; will be changed to &amp;amp;. 
            As there is no CDATA support in SMI. the "&amp;"s that are not in value shouldn't show up in 
            our objects.
            When unescape for write, we change all &amp;amp; to &amp;. This way, we are able to keep the comments unchanged.
            </summary>
            <param name="answerFileName">The file name of the input answer file</param>
            <param name="tempFileName">The file name of the output escaped temp file</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SerializerUtilities.UnEscapeFileForWrite(System.String,System.String)">
            <summary>
            Un-escape &amp;amp; to &amp; for all strings in temp file and write to answer file.
            Notes: all &amp;amp; will be changed to &amp;. 
            As there is no CDATA support in SMI, the "&amp;amp;"s that are not in value should only in comments.
            Since we change &amp; to &amp;amp; in comments when we read answer file, we are translate it back here for the comments.
            </summary>
            <param name="tempFileName">The file name of the input escaped temp file</param>
            <param name="answerFileName">The file name of the output answer file</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SerializerUtilities.GetXmlSnippetForSettingValue(System.String,System.String)">
            <summary>
            Get the &lt;name&gt;value&lt;/name&gt; xml string snippet for the specified name and value.
            </summary>
            <param name="name">The name of the setting.</param>
            <param name="escapedValue">The value of the setting.</param>
            <returns>The xml string snippet.</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SerializerUtilities.FindComponentNode(Microsoft.ComponentStudio.ComponentPlatformInterface.Node,Microsoft.ComponentStudio.ComponentPlatformInterface.Identity)">
            <summary>
            Find an existing component node
            </summary>
            <param name="settingNode">The setting node this component is created under</param>
            <param name="id">The identity of the component</param>
            <returns>the node for the component, could be the existing one</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SerializerUtilities.CreateComponentNode(Microsoft.ComponentStudio.ComponentPlatformInterface.Node,Microsoft.ComponentStudio.ComponentPlatformInterface.Identity)">
            <summary>
            Create or return the existing component node
            </summary>
            <param name="settingNode">The setting node this component is created under</param>
            <param name="id">The identity of the component</param>
            <returns>the node for the component, could be the existing one</returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingDefinitionContainer">
            <summary>
            Defines the interface to navigate the setting definition hierarchy of a certain component.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingDefinitionContainer.ChildSettingDefinitions">
            <summary>
            Retrieves a read-only collection of all immediate child <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition"/>s.
            </summary>
            <value>
            A read-only collection of all immediate child <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition"/>s.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingDefinitionContainer.SettingDefinitions">
            <summary>
            Retrieves all descendent <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition"/>s.
            </summary>
            <value>
            All descendent <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition"/>s.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingDefinitionContainer.ParentDefinitionContainer">
            <summary>
            Retrieves the parent setting definition container. 
            If the object represents a top-level container, it returns <c>null</c>.
            </summary>
            <value>
            The parent setting definition container.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingDefinitionContainer.ComponentId">
            <summary>
            Retrieves the identity of the component that owns this setting.
            </summary>
            <value>
            The identity of the component that owns this setting.
            </value>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition">
            <summary>
            Describes the definition of a setting.
            </summary>
            <remarks>
            A definition of a setting is the schema of a setting. An instance of this class can validate a SettingOverride value.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.IsScalarType">
            <summary>
            Indicates whether or not the current setting is a scalar type.
            </summary>
            <value>
            <c>true</c> if the current setting is a scalar type; <c>false</c> otherwise.
            </value>
            <remarks>
            Scalar setting can have override-able values and no child setting.
            This is opposed to non-scalar types that have child setting but no override-able values.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.IsListType">
            <summary>
            Indicates whether or not the current setting is a list type.
            </summary>
            <value>
            <c>true</c> if the current setting of a list type; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.TypeName">
            <summary>
            Retrieves the type name of the setting.
            </summary>
            <value>
            The type name of the setting.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.DataType">
            <summary>
            Retrieves the .NET type of this setting.
            </summary>
            <value>
            The .NET type of this setting or the System.Object if the setting is not a scalar type.
            </value>
            <remarks>
            Scalar types are integer, boolean, string, string array (string[]) and byte array (byte[]).
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.DefaultValue">
            <summary>
            Retrieves the default value for this Setting or <c>null</c> if no default value is defined.
            </summary>
            <value>
            The default value for this Setting or <c>null</c> if no default value is defined.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.IsDefaultValueDefined">
            <summary>
            Indicates whether or not the default value of the current setting is defined.
            </summary>
            <value>
            <c>true</c> if the current setting is defined; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.CanBeNull">
            <summary>
            Indicates whether the value of this setting can be null. If the setting is not a scalar type the value is <c>false</c>.
            </summary>
            <value>
            <c>true</c> if it can be null; <c>false</c> if value cannot be <c>null</c> or it is not a scalar type.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.IsDeprecated(System.String@)">
            <summary>
            Indicates whether the setting is deprecated.
            </summary>
            <param name="description">The detail description of the deprecation</param>
            <returns>
            <c>true</c> if the setting is deprecated; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.IsArrayType">
            <summary>
            Indicates whether the current setting is an array of scalar type.
            </summary>
            <value>
            <c>true</c> if the current setting is an array of scalar type; <c>false</c> for dynamic keyed list items.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.KeyType">
            <summary>
            Retrieves the data type of the key for a list.
            </summary>
            <value>
            The data type of the key for a list, type of System.object if key is not defined or
            null if this setting is not a list.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.KeyName">
            <summary>
            Retrieves the name of the child setting that is defined as the list item key if this setting is a list item.
            </summary>
            <value>
            The name of the child setting that is defined as the list item key if this setting is a list item,
            <c>null</c> otherwise.
            </value>
            <remarks>
            If the setting is a normal list item, the key name will be the name of the child setting
            that must be uniquely defined in the list. If the setting is a dynamic list item,
            the key name will always be @keyValue. Otherwise the value will be null.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.IsKeyDefined">
            <summary>
            Indicates whether or not a key is defined for a list.
            </summary>
            <value>
            <c>true</c> if key is defined for a list; <c>false</c> otherwise.
            </value>
            <remarks>
            If the setting is a list type but the key is not defined, then it is a list type with dynamic key
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.IsKeyOfParent">
            <summary>
            Indicate whether or not this setting is the key of its parent list setting.
            </summary>
            <value>
            <c>true</c> if this setting is the key of its parent list setting; <c>false</c> otherwise.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.GetListItemNameFromKey(System.String,System.String)">
            <summary>
            Retrieves the name of setting override having a key value
            </summary>
            The "value" string will be XML escaped. 
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.GetListItemNameFromKey(System.String)">
            <summary>
            Retrieves the name of setting override having a key value.
            </summary>
            <param name="keyValue">The key value string.</param>
            <returns>
            The setting override name in the format: [KeyName="value"]
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.GetListItemKeyFromName(System.String,System.String)">
            <summary>
            Translate the string [@keyValue="key"] into key, verify that the key name matches.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.GetListItemKeyFromName(System.String)">
            <summary>
            Retrieves the key value from a corresponding setting override name.
            </summary>
            <param name="name">The name of a corresponding setting override (in the format: [KeyName="value"]</param>
            <returns>The key value</returns>
            <remarks>
            If you have a list setting override and want to get the key value,
            you can call setting override's Definition.GetListItemKeyFromName and pass the name of the override.
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.MaxLength">
            <summary>
            Retrieves the maximum length of the setting's value.
            </summary>
            <value>
            The maximum length of the setting's value or 0 if there is no restriction.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.EnumerationValue">
            <summary>
            Retrieves the collection of the allowed values of the enumeration,
            if the setting has an enumerated list of allowable values, <c>null</c> otherwise.
            </summary>
            <value>
            The collection of the allowed values of the enumeration,
            if the setting has an enumerated list of allowable values, <c>null</c> otherwise.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.RangeMinValue">
            <summary>
            Retrieves the minimum value of the setting.
            </summary>
            <value>
            The minimum value (inclusive) of the setting or null if there is no restriction.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.RangeMaxValue">
            <summary>
            Retrieves the maximum value of the setting.
            </summary>
            <value>
            The maximum value (inclusive) of the setting or null if there is no restriction.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.RegularExpression">
            <summary>
            Retrieves the regular expression that can be used to validate the string value.
            </summary>
            <value>
            The regular expression that can be used to validate the string value or <c>null</c> if there is no restriction.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.Name">
            <summary>
            Retrieves the name of the setting.
            </summary>
            <value>
            The name of the setting.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.Path">
            <summary>
            Retrieves the absolute path to the setting from its containing component setting,
            in the format of "SettingName1/SettingName2/..."
            </summary>
            <value>
            The absolute path to the setting.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.Description">
            <summary>
            Retrieves the description of the setting.
            </summary>
            <value>
            The description of the setting.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.ApplicableConfigurationPasses">
            <summary>
            Lists all configuration passes that this setting can be applied to.
            </summary>
            <value>
            The collection of all configuration passes that this setting can be applied to.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.DisplayName">
            <summary>
            Retrieves the display name of the setting.
            </summary>
            <value>
            The display name of the setting.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.Parent">
            <summary>
            Retrieves the parent setting of the setting.
            </summary>
            <value>
            The parent setting of the setting or null for top level settings.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.MinOccurrences">
            <summary>
            Retrieves the minimum occurrences allowed for the setting.
            </summary>
            <value>
            The minimum occurrences allowed for the setting.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.MaxOccurrences">
            <summary>
            Retrieves the maximum occurrences allowed for the setting.
            </summary>
            <value>
            The maximum occurrences allowed for the setting.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.Component">
            <summary>
            Retrieves the <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting"/>
            instance that defines the setting.
            </summary>
            <value>
            the <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting"/>
            instance that defines the setting.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.EncodingDataType">
            <summary>
            Gets the .NET type of this SettingDefinition, 
            returns string[], Byte[] and SByte[] for array types
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.DataTypeInfo">
            <summary>
            Information about all supported data type.
            Use a structure in case there is going to be more type dependent information.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.Validate(System.String)">
            <summary>
            Validates a certain override value for a scalar setting.
            </summary>
            <param name="value">The value to validate.</param>
            <returns>The validation result.</returns>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.ChildSettingDefinitions">
            <summary>
            Retrieves a read only collection of all immediate child setting definitions.
            </summary>
            <value>
            A read only collection of all immediate child setting definitions.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.SettingDefinitions">
            <summary>
            Retrieves a read only collection of all child setting definitions including all descendants.
            </summary>
            <value>
            A read only collection of all child setting definitions including all descendants.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.ParentDefinitionContainer">
            <summary>
            Retrieves the setting definition container that contains the setting.
            If the setting definition represents a top level setting, this will return the
            <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting"/> containing the setting.
            </summary>
            <value>
            The instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingDefinitionContainer"/>
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.ComponentId">
            <summary>
            Retrieves the identity of the component that defines this setting.
            </summary>
            <value>
            The identity of the component that defines this setting.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.ValidateSettingName(System.String)">
            <summary>
            Validate whether the name is a valid setting name
            </summary>
            <param name="name">The name of the setting to be validated.</param>
            <exception cref="T:System.ArgumentException">Thrown if <c>name</c> is not a valid name.</exception>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.InvalidSettingDefinition">
            <summary>
            Retrieves the dummy definition instance.
            </summary>
            <value>
            The dummy definition instance.
            </value>
            <remarks>
            Any setting definition that cannot be found in the attached image will equate to this instance.
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.ToString">
            <summary>
            Retrieves the display name of the setting definition.
            </summary>
            <value>
            The display name of the setting definition.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>
            Change the category name of the SettingDefinition properties
            and also make child scalar definitions displayed as properties in a separate category 
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition">
            <summary>
            This dummy setting definition serves as a central place to 
            control the behavior of authoring without an image.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.IsScalarType">
            <summary>
            Always allow user to change Value
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.IsListType">
            <summary>
            Assume this is a list to allow list related authoring
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.DefaultValue">
            <summary>
            The default value of this setting, null if it is not a scalar type
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.IsDefaultValueDefined">
            <summary>
            Indicates whether or not the default value of the current setting is defined.
            </summary>
            <value>
            <c>true</c> if the current setting is defined; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.CanBeNull">
            <summary>
            Allow it to be nil.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.IsDeprecated(System.String@)">
            <summary>
            Always show as non-deprecated for DummySettingDefinition 
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.IsArrayType">
            <summary>
            Not an array type as we are not going to escape the value
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.TypeName">
            <summary>
            The name of the type
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.DataType">
            <summary>
            Gets the .NET type of this SettingDefinition
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.KeyType">
            <summary>
            Data type of the key for an List
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.KeyName">
            <summary>
            Name of the key for an List
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.IsKeyDefined">
            <summary>
            Whether key is defined for an List, false if setting is not a list
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.GetListItemNameFromKey(System.String)">
            <summary>
            Translate the string key into [@keyValue="key"]. 
            We assume the list have a dynamic key, which should be the case without definition.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.GetListItemKeyFromName(System.String)">
            <summary>
            Translate the string [@keyValue="key"] into key.
            We assume the list have a dynamic key, which should be the case without definition.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.MaxLength">
            <summary>
            No restriction
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.EnumerationValue">
            <summary>
            No restriction
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.RangeMinValue">
            <summary>
            No restriction
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.RangeMaxValue">
            <summary>
            No restriction
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.DummySettingDefinition.RegularExpression">
            <summary>
            No restriction
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSettingDefinitionCollection">
            <summary>
            Represents all setting definitions in a component.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSettingDefinitionCollection.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingDefinitionContainer)">
            <summary>
            Construct an instance of <c>ComponentSettingDefinitionCollection</c>"/>
            </summary>
            <param name="container">The container which contains this collection.</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSettingDefinitionCollection.Find(System.String)">
            <summary>
            Retrieves the setting definition from the specified path.
            </summary>
            <param name="relativeSettingDefinitionPath">The path of the setting. </param>
            <returns>The setting definition that matches the path. <c>null</c> if the setting is not found.</returns>
            <remarks>
            <para>Use '/' to separate different levels of settings. For 
            example, to retrieve a setting named "subSettings1", which is 
            a sub-setting of another setting named "settings1", use 
            "settings1/subSettings1."</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if <c>relativeSettingDefinitionPath</c> is null or empty.</exception>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSettingDefinitionCollection.Count">
            <summary>
            Retrieves the number of items in the collection.
            </summary>
            <value>
            The number of items in the collection.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSettingDefinitionCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator to allow iterating through the collection.
            </returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingOverrideContainer">
            <summary>
            Defines the interface to navigate the setting override hierarchy of a certain component.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingOverrideContainer.ChildSettingOverrides">
            <summary>
            Retrieves a read-only collection of all immediate child <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride"/>s.
            </summary>
            <value>
            A read-only collection of all immediate child <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride"/>s.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingOverrideContainer.SettingOverrides">
            <summary>
            Retrieves all descendent <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride"/>s.
            </summary>
            <value>
            All descendent <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride"/>s.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingOverrideContainer.ParentOverrideContainer">
            <summary>
            Retrieves the parent setting override container. 
            If the object represents a top-level container, it returns <c>null</c>.
            </summary>
            <value>
            The parent setting definition container.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingOverrideContainer.HasOverrideBelow">
            <summary>
            Checks whether this container contains an override value in its descendants and itself.
            </summary>
            <value>
            <c>true</c> if container contains an override value in its descendants and itself; <c>false</c> otherwise.
            </value>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride">
            <summary>
            Represents a setting override.
            </summary>
            <remarks>
            The SettingOverride class is designed to be read-only. It contains pure data that cannot be manipulated by users.
            This class describes a setting override that already exists within an image, and cannot be changed directly.
            To represent setting overrides that can be manipulated, use the <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride"/> class.</remarks>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.ActionType">
            <summary>
            Specify the action to take place when the override is apply during unattended installation.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.ActionType.DefaultAction">
            <summary>
            The default action value for newly created setting override.
            For scalar type setting, the default action is to modify existing value.
            For list type setting, the default action is to add the list item
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.ActionType.Modify">
            <summary>
            Modify existing value in the image with the value from this setting override
            or replace the existing list item having the same key with this setting override.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.ActionType.AddListItem">
            <summary>
            Add this setting override as a new item of the existing list.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.ActionType.RemoveListItem">
            <summary>
            Remove the existing item in the list having the same key this setting override has.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.Definition">
            <summary>
            Retrieves the definition for the override (see <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition"/>).
            </summary>
            <value>
            The definition for the override.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.Parent">
            <summary>
            Retrieves the parent of the override.
            </summary>
            <value>
            The parent of the override or <c>null</c> for top level <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride"/>.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.Component">
            <summary>
            Retrieves the root <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting"/> object this override belongs to.
            </summary>
            <value>
            The root <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting"/> object this override belongs to.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.Path">
            <summary>
            Retrieves the absolute path to the setting override from its containing component setting,
            in the format of "SettingName1/SettingName2/..."
            </summary>
            <value>
            The absolute path to the setting override.
            </value>
            <remarks>
            If the override contains list items in its path, the key names will appear in the path.
            For example, "name1/name2[key="value"]/name3/.../nameN."
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.SettingDefinitionPath">
            <summary>
            Retrieves the absolute definition path to the setting override from its containing component setting,
            in the format of "SettingName1/SettingName2/..."
            </summary>
            <value>
            The absolute definition path to the setting override.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.StorePath">
            <summary>
            SMI path, internal use, it happens that SMI use the same format as ours
            if not, we can construct the StorePath in the same way as Path
            except use path info retrieved from definition for the top level override
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.SettingDefinitionName">
            <summary>
            Retrieves the definition name of the setting.
            </summary>
            <value>
            The definition name of the setting.
            </value>
            <remarks>
            All overrides in a list return the same definition name, but their <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.Name"/>
            will be different because of the key name ([key="value"])
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.Name">
            <summary>
            Retrieves the name of the setting. If the setting is a list item, the name will be in the format: Name[key="value"].
            </summary>
            <value>
            The name of the setting.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.StoreName">
            <summary>
            The name of the setting in SMI store
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.ListItemName">
            <summary>
            The list item name of the setting, in the format of [key="value"]
            null if not a list item
            empty string if key is not specified
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.ChildOverrideChanged">
            <summary>
            Sets the last child override that was changed. Used to fire event notification
            when a child value was changed and which override caused the change.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.ChildOverrideRemoved">
            <summary>
            Sets the last child override that was removed. Used to fire event notification
            when a child override was removed and which override it was.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.DynamicKey">
            <summary>
            Retrieves the value of the dynamic key if this is a dynamically keyed list item.
            </summary>
            <value>
            The value of the dynamic key if this is a dynamically keyed list item, null for non-list item or when
            <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.Key"/> is defined.</value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.Key">
            <summary>
            Retrieves the value of the key for a list item.
            </summary>
            <value>
            The string that contains the key value or null if this is not a list item or the key has not been specified.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.Value">
            <summary>
            Retrieves the value of the setting override.
            </summary>
            <value>
            The value of the setting override.
            </value>
            <remarks>
            Use this property to retrieve or set value of all types of settings other than string array settings.
            For numeric type (byte, integer), use the string representation of the value.
            For Boolean type, use lowercase "true" or "false".
            For byte array, use string of hexadecimal numbers.
            For string array, see <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.StringArrayValue"/>
            </remarks>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.StringArrayValue">
            <summary>
            Retrieves the override value for the string array settings, that is, when
            <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.DataType"/> is a string
            and <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingDefinition.IsArrayType"/> is true.
            It applies only to string array settings. For all other types of settings, see the
            <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.Value"/> property.
            </summary>
            <value>
            The override value for the string array settings.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.Action">
            <summary>
            Retrieves the action for the override.
            </summary>
            <value>
            The <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.ActionType"/> for the override.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.HasValueBelow">
            <summary>
            Checks whether this container has any setting overrides below it.
            </summary>
            <returns>
            <c>true</c> if this container has any setting overrides beneath it; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting,System.String,System.Boolean)">
            <summary>
            Construct an instance of top level <c>SettingOverride</c>
            </summary>
            <param name="root">The <see>ComponentSetting</see> for the override to be created.</param>
            <param name="name">The name of the setting.</param>
            <param name="ignoreDefinition">Whether ignore the definition and always create the override or not.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <c>root</c> or <c>name</c> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">Thrown if setting specified by <c>name</c> is not found, or the setting cannot be applied to the given configuration pass.</exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.ValidateKeyValue(System.String,System.String)">
            <summary>
            Validate whether the value is valid to be a key of a list.
            Special character "\" can not be in the value. 
            </summary>
            <param name="keyValue">The value of key of the override to search for.</param>
            <param name="keyName">The name of the key.</param>
            <returns>The matching setting override. null if no matching override is found.</returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.FindListItemWithKey(Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingOverrideContainer,System.String,System.String)">
            <summary>
            Find the first setting override with the specified definitionName and the specified key value
            in the specified container. This function searches for direct children only.
            </summary>
            <param name="parent">the parent container in which to search the override for</param>
            <param name="listItemDefinitionName">the setting definition name of the child list item</param>
            <param name="keyValue">the value of key of the override to search for</param>
            <returns>The matching setting override. null if no matching override is found.</returns>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.ChildSettingOverrides">
            <summary>
            Retrieves all the direct children setting overrides of this setting override.
            Can only contain the overrides for the same configuration pass
            </summary>
            <value>
            All the direct children setting overrides of this setting override.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.SettingOverrides">
            <summary>
            Retrieves the collection of all setting overrides that exist within this setting override.
            </summary>
            <value>
            The collection of all setting overrides that exist within this setting override.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.ParentOverrideContainer">
            <summary>
            Retrieves the setting override container that contains the setting override.
            If the setting override represents a top level setting, this will return the
            <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSetting"/> containing the setting override.
            </summary>
            <value>
            The instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingOverrideContainer"/>
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.HasOverrideBelow">
            <summary>
            Checks whether this container has any setting overrides beneath it.
            </summary>
            <returns>
            <c>true</c> if this container has any setting overrides beneath it; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.ProcessOverridesContainerFirst(Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingOverrideContainer,Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.OnProcessContainer,System.Object)">
            <summary>
            Process all the setting overrides in this container, including this container,
            it processes the container first, and then the overrides inside the container
            if onProcessSettingOverride returns false, the children overrides will not be processed
            </summary>
            <param name="overrideContainer">the container to process</param>
            <param name="onProcessContainer">the function to call for processing</param>
            <param name="parameter">the additional parameter for the process</param>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.OnProcessContainer">
            <summary>
            Process one setting override container
            </summary>
            <param name="overrideContainer">the object to process</param>
            <param name="parameter">the additional parameter for the process</param>
            <returns>
            true: if need to process the parent/children
            false: if no need to process the parent/children
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.ProcessOverridesChildrenFirst(Microsoft.ComponentStudio.ComponentPlatformInterface.ISettingOverrideContainer,Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.OnProcessContainer,System.Object)">
            <summary>
            Process all the setting overrides in this container, including this container,
            it processes child first, and then parent
            if onProcessSettingOverride returns false, the parent will not be processed
            </summary>
            <param name="overrideContainer">the container to process</param>
            <param name="onProcessContainer">the function to call for processing</param>
            <param name="parameter">the additional parameter for the process</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.ToString">
            <summary>
            Retrieves the name of the setting override.
            </summary>
            <returns>
            The <c>Name</c> of the setting override.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.IsValueNode(Microsoft.ComponentStudio.ComponentPlatformInterface.Node,System.Boolean@)">
            <summary>
            Determines whether a node represented by "node" is a value of setting override.
            </summary>
            <param name="node"></param>
            <param name="escaped"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingOverride.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>
            Change the category name of the SettingOverride properties
            and also make child scalar Override displayed as properties in a separate category 
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverrideCollection">
            <summary>
            Represents all descendent setting overrides of a certain setting override in an answer file.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverrideCollection.Create(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity,System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions)">
            <summary>
            Adds a setting override to the answer file for the component specified by an identity. 
            Creates or returns an existing setting override specified by a path and a configuration 
            pass. All the setting overrides along the path will be created if necessary.
            </summary>
            <param name="identity">The identity of the component.</param>
            <param name="path">The path to the setting.</param>
            <param name="configurationPass">The configuration pass.</param>
            <param name="createOption">The enumeration element that determines whether to return the existing setting override 
            or throw exception when one already exists.</param>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride"/></returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="identity"/> or <paramref name="path"/> is <c>null</c> or empty.</exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the override cannot be created (for example, maximum occurrences has been reached), or the setting override
            already exists, and the value of <paramref name="createOption"/> is <see cref="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions.FailIfExists"/>.
            </exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverrideCollection.FindAny(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity,System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)">
            <summary>
            Finds a single setting override specified by an identity, a path and a configuration pass.
            </summary>
            <param name="identity">The identity of the component.</param>
            <param name="path">The path to the setting.</param>
            <param name="configurationPass">The configuration pass.</param>
            <returns>
            A single setting override specified by <paramref name="identity"/>, <paramref name="path"/> and <paramref name="configurationPass"/>.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverrideCollection.FindAll(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity,System.String)">
            <summary>
            Retrieves all the overrides in a collection that match the specified identity and path.
            </summary>
            <param name="identity">The identity of the component.</param>
            <param name="path">The path of the setting to be The path to the setting..</param>
            <returns>
            The collection of overrides that matches <paramref name="identity"/> and <paramref name="path"/>.
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverrideCollection.FindAll(Microsoft.ComponentStudio.ComponentPlatformInterface.Identity,System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.ConfigurationPass)">
            <summary>
            Retrieves all the overrides in a collection that match the specified identity, path, and configuration pass.
            </summary>
            <param name="identity">The identity of the component.</param>
            <param name="path">The path to the setting.</param>
            <param name="configurationPass">The configuration pass.</param>
            <returns>
            The collection of overrides that matches <paramref name="identity"/>, <paramref name="path"/>, and <paramref name="configurationPass"/>.
            </returns>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverrideCollection.Count">
            <summary>
            Retrieves the number of items in the collection.
            </summary>
            <value>
            The number of items in the collection.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverrideCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator to allow iterating through the collection.
            </returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSettingOverrideCollection">
            <summary>
            Represents all setting overrides in a component.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSettingOverrideCollection.Count">
            <summary>
            Retrieves the number of items in the collection.
            </summary>
            <value>
            The number of items in the collection.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSettingOverrideCollection.FindAny(System.String)">
            <summary>
            Retrieves a single setting override specified by path.
            </summary>
            <param name="relativePath">The path of the setting.</param>
            <returns>A single setting override specified by the <paramref name="relativePath"/>. 
            If multiple overrides match the path, the first one is returned.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="relativePath"/> is <c>null</c> or empty.</exception>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSettingOverrideCollection.FindAll(System.String)"/>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSettingOverrideCollection.FindAll(System.String)">
            <summary>
            Find all setting overrides of the component that matches the path.
            </summary>
            <param name="relativePath">The path of the setting.</param>
            <returns>All setting overrides that matches the path.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="relativePath"/> is <c>null</c> or empty.</exception>
            <remarks>
            If no matches are found, an empty collection is returned.
            </remarks>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSettingOverrideCollection.FindAny(System.String)"/>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.ComponentSettingOverrideCollection.GetEnumerator">
            <summary>
            Retrieves an enumerator that can iterate over the collection.
            </summary>
            <returns>
            An enumerator over the collection.
            </returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSettingOverrideCollection">
            <summary>
            Represents all setting overrides of a component in a certain configuration pass in an answer file.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSettingOverrideCollection.Create(System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions)">
            <summary>
            Create or return an existing setting override specified by path.
            All the setting overrides along the path will be created if necessary.
            </summary>
            <param name="relativePath">The setting path.</param>
            <param name="createOption">The enumeration element that determines whether to return the existing instance or throw exception 
            when an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileSettingOverride"/> already exists.</param>
            <returns>The setting override specified by <paramref name="relativePath"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="relativePath"/> is <c>null</c> or empty.</exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the override cannot be created (for example, maximum occurrences has been reached), or the setting override
            already exists, and the value of <paramref name="createOption"/> is <see cref="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions.FailIfExists"/>.
            </exception>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSettingOverrideCollection.FindAny(System.String)">
            <summary>
            Finds a single setting override specified by path.
            </summary>
            <param name="relativePath">The setting path.</param>
            <returns>A single setting override specified by relativePath. <c>null</c> if the setting is not found.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="relativePath"/> is <c>null</c> or empty.</exception>
            <seealso cref="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSettingOverrideCollection.FindAll(System.String)"/>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSettingOverrideCollection.FindAll(System.String)">
            <summary>
            Retrieves all the overrides in this collection that match the specified path.
            </summary>
            <param name="relativePath">The path to the setting.</param>
            <returns>All the overrides in all configuration passes that match the 
            <paramref name="relativePath"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="relativePath"/> is <c>null</c> or empty.</exception>
            <remarks>
            If no matches are found, an empty collection is returned.
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileComponentSettingOverrideCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator over the collection. 
            </returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SettingPath.ParseListKeyInfoFromName(System.String,System.String@,System.String@,System.String@)">
            <summary>
            Parse the name in the format of listname[key="keyvalue"] into listname, key and keyvalue
            </summary>
            <param name="name"></param>
            <param name="listName"></param>
            <param name="keyName"></param>
            <param name="keyValue"></param>
            <returns>returns true if the name is in the format of listname[key="keyvalue"], false if not</returns>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SourcePath">
            <summary>
            Represents a path for a package file.
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SourcePath.Parent">
            <summary>
            Retrieves the parent package action of the current source path.
            </summary>
            <value>
            The <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction"/> containing the path
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SourcePath.SourceNode">
            <summary>
            Node holding the source
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SourcePath.Path">
            <summary>
            Retrieves the path of the package file.
            </summary>
            <value>
            The path of the package file.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SourcePath.PermanenceType">
            <summary>
            Retrieves or sets the permanence type of the path.
            </summary>
            <value>
            The permanence type of the path.
            </value>
            <remarks>
            There can be more than one path associated with a package. The first one in the collection will be used
            during unattended installation. The ones with <see cref="F:Microsoft.ComponentStudio.ComponentPlatformInterface.PermanenceType.Temporary"/> will be removed after the installation.
            </remarks>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SourcePath.Remove">
            <summary>
            Removes the source path.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SourcePathCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SourcePath"/>
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SourcePathCollection.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction)">
            <summary>
            Construct an instance of <c>PackageActionCollection</c>"/>
            </summary>
            <param name="parent">The PackageAction object this source path collection belongs to.</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SourcePathCollection.Create(System.String,Microsoft.ComponentStudio.ComponentPlatformInterface.CreateOptions)">
            <summary>
            Create or retrieves a path to a package.
            </summary>
            <param name="path">Path of the package file.</param>
            <param name="createOption">The enumeration element that determines whether to return the existing source path or throw an exception when one already exists.</param>
            <remarks>
            The newly created instance will always be inserted at the beginning of the collection, and so
            will represent the primary source path of the package. See <see cref="P:Microsoft.ComponentStudio.ComponentPlatformInterface.PackageAction.PrimarySourcePath"/>.
            </remarks>
            <returns>An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SourcePath"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="path"/> is <c>null</c> or empty.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if there is already a SourcePath for <paramref name="path"/> and createOption == CreateOptions.FailIfExists.</exception>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult">
            <summary>
            Describes the operation results.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.#ctor">
            <summary>
            Construct an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.Status)">
            <summary>
            Construct an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult"/>.
            </summary>
            <param name="status">The status of validation.</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.Status,System.String)">
            <summary>
            Construct an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult"/>.
            </summary>
            <param name="status">The status of validation.</param>
            <param name="message">The description of the validation result.</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.Status,System.String,System.Object)">
            <summary>
            Construct an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult"/>.
            </summary>
            <param name="status">The status of validation.</param>
            <param name="message">The description of the validation result.</param>
            <param name="subject">The subject object of the validation result.</param>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.Status">
            <summary>
            Describes the status of the operation. 
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.Status.Pass">
            <summary>
            The operation is successful. 
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.Status.PassWithWarning">
            <summary>
            The operation passed with warnings. 
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.Status.Fail">
            <summary>
            The operation failed. 
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.Succeeded">
            <summary>
            Indicates whether the validation is successful.
            </summary>
            <value>
            <c>true</c> if the validation is successful; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.CurrentStatus">
            <summary>
            Retrieves the status of the validation.
            </summary>
            <value>
            The results of the validation.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.WorstCase(Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.Status,Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.Status)">
            <summary>
            Determines which of the two given ValidationStatus instance indicate the worst condition
            and returns that ValidationStatus
            </summary>
            <param name="status1"></param>
            <param name="status2"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.Message">
            <summary>
            Retrieves the explanation of the validation result.
            </summary>
            <value>
            The explanation of the validation result.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.Subject">
            <summary>
            Retrieves the subject object against which the warning or error is found. 
            It is <c>null</c> if validation passes or no subject object information is available.
            </summary>
            <value>
            The subject object against which the warning or error is found.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.InnerResults">
            <summary>
            Retrieves all validation results as inner results, if validation results consist of 
            results of validation on other objects.
            </summary>
            <value>
            The results of validation as inner results.
            </value>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.AddInnerResult(Microsoft.ComponentStudio.ComponentPlatformInterface.SimpleCpiResult)">
            <summary>
            Add a new inner result into the result, 
            status of the total result will updated automatically
            </summary>
            <param name="innerResult">the new inner result to add</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.Reset">
            <summary>
            Clear all validation result, reset status to Pass
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode">
            <summary>
            Defines the result code used in <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SimpleCpiResult"/>
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.ToString">
            <summary>
            Returns a string that represents the result code.
            </summary>
            <returns>
            A string that represents the result code.
            </returns>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.Ok">
            <summary>
            The validation is successful.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.OfflineImageNotExist">
            <summary>
            The offline image does not exist.
            </summary>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.InvalidOfflineImage">
            <summary>
            The offline image is not a valid Windows image.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.CannotOpenOfflineImage">
            <summary>
            The offline image cannot be opened.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.InvalidWim">
            <summary>
            The file is not a valid Windows image (.wim) file.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.InvalidImageInWim">
            <summary>
            The specified image name does not exist in the Windows image(.wim) file.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.CatalogNotExist">
            <summary>
            The catalog file does not exist.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CatalogValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.InvalidCatalog">
            <summary>
            The file is not a valid catalog file.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CatalogValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.CatalogNotMatchImage">
            <summary>
            The catalog file does not match the offline image.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CatalogValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.InvalidCatalogRevision">
            <summary>
            The catalog file was created by previous versions of application.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CatalogValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.CannotOpenCatalog">
            <summary>
            The catalog file cannot be opened.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CatalogValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.NoOfflineImageInAnswerFile">
            <summary>
            The answer file is not associated with any offline image. 
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.CannotDetermineOfflineImageInAnswerFile">
            <summary>
            Cannot determine the offline image associated with the answer file. 
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.NoSettingOverrideInComponent">
            <summary>
            A component is found in answer file but no setting of it has been overridden.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.InvalidSettingDefinition">
            <summary>
            The setting is not a valid setting for the component.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.InvalidSettingOverride">
            <summary>
            The setting is a valid setting for the component but the override is not.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.DuplicateSettingOverride">
            <summary>
            The setting override is a duplicate of another setting override in the answer file.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.InvalidConfigurationPass">
            <summary>
            The configuration pass is not applicable to the specified setting.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.ComponentNotInOfflineImage">
            <summary>
            The component does not exist in the offline image.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.DuplicatePackageAction">
            <summary>
            The package action is a duplicate of another package action in the answer file.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.InvalidPackageAction">
            <summary>
            The package action is invalid.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.SettingDeprecated">
            <summary>
            The setting is deprecated.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileValidationResultCode"/>.
            </value>
        </member>
        <member name="F:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode.PublishIOError">
            <summary>
            Cannot publish the answer file to a configuration set.
            </summary>
            <value>
            An instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileValidationResultCode"/>.
            </value>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageValidationResultCode">
            <summary>
            Represents a category of validation results that indicates problems with offline images.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CatalogValidationResultCode">
            <summary>
            Represents a category of validation results that indicates problems with offline image catalogs.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.AnswerFileValidationResultCode">
            <summary>
            Represents a category of validation results that indicates problems with answer files.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.PublishResultCode">
            <summary>
            Represents a category of validation results that indicates problems with configuration set.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SimpleCpiResult">
            <summary>
            Represents a simple <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult"/> that does not contain inner results.
            </summary>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SimpleCpiResult.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.Status,Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode)">
            <summary>
            Construct an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SimpleCpiResult"/>.
            </summary>
            <param name="status">The status of validation.</param>
            <param name="code">The code that describes the validation result.</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SimpleCpiResult.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.Status,Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode,System.String)">
            <summary>
            Construct an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SimpleCpiResult"/>.
            </summary>
            <param name="status">The status of validation.</param>
            <param name="code">The code that describes the validation result.</param>
            <param name="message">The description of the validation result.</param>
        </member>
        <member name="M:Microsoft.ComponentStudio.ComponentPlatformInterface.SimpleCpiResult.#ctor(Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResult.Status,Microsoft.ComponentStudio.ComponentPlatformInterface.CpiResultCode,System.String,System.Object)">
            <summary>
            Construct an instance of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.SimpleCpiResult"/>.
            </summary>
            <param name="status">The status of validation.</param>
            <param name="code">The code that describes the validation result.</param>
            <param name="message">The description of the validation result.</param>
            <param name="subject">The subject object of the validation result.</param>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.SimpleCpiResult.CurrentCode">
            <summary>
            Retrieves CpiResult.Code that can be used to progammatically determines the result.
            </summary>
        </member>
        <member name="T:Microsoft.ComponentStudio.ComponentPlatformInterface.WimInfo">
            <summary>
            Represents a Windows image file (.wim).
            </summary>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.WimInfo.WimPath">
            <summary>
            Retrieves the full path of the corresponding .wim file.
            </summary>
            <value>
            The full path of the corresponding .wim file.
            </value>
        </member>
        <member name="P:Microsoft.ComponentStudio.ComponentPlatformInterface.WimInfo.Images">
            <summary>
            Retrieves a collection of all Windows images inside of a .wim file.
            </summary>
            <value>
            A ReadOnlyKeyedCollection of <see cref="T:Microsoft.ComponentStudio.ComponentPlatformInterface.OfflineImageInfo"/>
            keyed by image name
            </value>
        </member>
    </members>
</doc>
